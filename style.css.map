{"version":3,"sources":["styles/_sprite.styl","node_modules/nib/lib/nib/flex.styl","style.css","node_modules/nib/lib/nib/vendor.styl","node_modules/axis/axis/reset.styl","node_modules/nib/lib/nib/border.styl","node_modules/nib/lib/nib/overflow.styl","style.styl","node_modules/nib/lib/nib/reset.styl","node_modules/axis/axis/print.styl","node_modules/typographic/stylus/typographic.styl","node_modules/rupture/rupture/index.styl","node_modules/nib/lib/nib/size.styl","node_modules/axis/axis/buttons.styl","node_modules/axis/axis/vendor.styl","node_modules/axis/axis/interaction.styl","node_modules/axis/axis/ui.styl","node_modules/nib/lib/nib/clearfix.styl","node_modules/axis/axis/utilities.styl","node_modules/nib/lib/nib/positions.styl","node_modules/axis/axis/code.styl","node_modules/axis/axis/layout.styl","node_modules/axis/axis/tables.styl","node_modules/axis/axis/forms.styl"],"names":[],"mappings":"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","file":"style.css","sourcesContent":["$sprite-base-font-size = 10px\n\n.sprite {\n    font-size: $sprite-base-font-size;\n    vertical-align: middle;\n    line-height: 1;\n    position: relative;\n    top: 1px;\n    display: inline-block;\n}\n\n.sprite {\n    background-repeat: no-repeat;\n    background-image: url(img/iconsprites/sprite.svg);\n    background-size: 69em*(1/$sprite-base-font-size) 611em*(1/$sprite-base-font-size);\n}\n\n.no-svg .sprite {\n    background-image: url(img/iconsprites/sprite.png);\n}\n\n.sprite-facebook_logo_big {\n    background-position: 0em*(1/$sprite-base-font-size) 0em*(1/$sprite-base-font-size);\n    width: 27em*(1/$sprite-base-font-size);\n    height: 26em*(1/$sprite-base-font-size);\n}\n\n.sprite-facebook_logo_footer {\n    background-position: 0em*(1/$sprite-base-font-size) -26em*(1/$sprite-base-font-size);\n    width: 16em*(1/$sprite-base-font-size);\n    height: 16em*(1/$sprite-base-font-size);\n}\n\n.sprite-facebook_logo_footer_white {\n    background-position: 0em*(1/$sprite-base-font-size) -42em*(1/$sprite-base-font-size);\n    width: 16em*(1/$sprite-base-font-size);\n    height: 16em*(1/$sprite-base-font-size);\n}\n\n.sprite-instagram_logo_big {\n    background-position: 0em*(1/$sprite-base-font-size) -58em*(1/$sprite-base-font-size);\n    width: 28em*(1/$sprite-base-font-size);\n    height: 26em*(1/$sprite-base-font-size);\n}\n\n.sprite-instagram_logo_footer {\n    background-position: 0em*(1/$sprite-base-font-size) -84em*(1/$sprite-base-font-size);\n    width: 17em*(1/$sprite-base-font-size);\n    height: 16em*(1/$sprite-base-font-size);\n}\n\n.sprite-instagram_logo_footer_white {\n    background-position: 0em*(1/$sprite-base-font-size) -100em*(1/$sprite-base-font-size);\n    width: 17em*(1/$sprite-base-font-size);\n    height: 16em*(1/$sprite-base-font-size);\n}\n\n.sprite-instagram_logo_posts {\n    background-position: 0em*(1/$sprite-base-font-size) -116em*(1/$sprite-base-font-size);\n    width: 38em*(1/$sprite-base-font-size);\n    height: 36em*(1/$sprite-base-font-size);\n}\n\n.sprite-linkedin {\n    background-position: 0em*(1/$sprite-base-font-size) -152em*(1/$sprite-base-font-size);\n    width: 15.27em*(1/$sprite-base-font-size);\n    height: 15.651em*(1/$sprite-base-font-size);\n}\n\n.sprite-post-arrow-left {\n    background-position: 0em*(1/$sprite-base-font-size) -168em*(1/$sprite-base-font-size);\n    width: 10em*(1/$sprite-base-font-size);\n    height: 15em*(1/$sprite-base-font-size);\n}\n\n.sprite-post-facebook-share {\n    background-position: 0em*(1/$sprite-base-font-size) -183em*(1/$sprite-base-font-size);\n    width: 16em*(1/$sprite-base-font-size);\n    height: 16em*(1/$sprite-base-font-size);\n}\n\n.sprite-slider-arrow-left {\n    background-position: 0em*(1/$sprite-base-font-size) -199em*(1/$sprite-base-font-size);\n    width: 69em*(1/$sprite-base-font-size);\n    height: 101em*(1/$sprite-base-font-size);\n}\n\n.sprite-slider-arrow-left-mobile {\n    background-position: 0em*(1/$sprite-base-font-size) -300em*(1/$sprite-base-font-size);\n    width: 50em*(1/$sprite-base-font-size);\n    height: 65em*(1/$sprite-base-font-size);\n}\n\n.sprite-slider-arrow-right {\n    background-position: 0em*(1/$sprite-base-font-size) -365em*(1/$sprite-base-font-size);\n    width: 69em*(1/$sprite-base-font-size);\n    height: 101em*(1/$sprite-base-font-size);\n}\n\n.sprite-slider-arrow-right-mobile {\n    background-position: 0em*(1/$sprite-base-font-size) -466em*(1/$sprite-base-font-size);\n    width: 50em*(1/$sprite-base-font-size);\n    height: 64em*(1/$sprite-base-font-size);\n}\n\n.sprite-slider-dot {\n    background-position: 0em*(1/$sprite-base-font-size) -530em*(1/$sprite-base-font-size);\n    width: 10em*(1/$sprite-base-font-size);\n    height: 10em*(1/$sprite-base-font-size);\n}\n\n.sprite-slider-dot-current {\n    background-position: 0em*(1/$sprite-base-font-size) -540em*(1/$sprite-base-font-size);\n    width: 10em*(1/$sprite-base-font-size);\n    height: 10em*(1/$sprite-base-font-size);\n}\n\n.sprite-x_close_desktop {\n    background-position: 0em*(1/$sprite-base-font-size) -550em*(1/$sprite-base-font-size);\n    width: 40em*(1/$sprite-base-font-size);\n    height: 40em*(1/$sprite-base-font-size);\n}\n\n.sprite-x_close_mobile {\n    background-position: 0em*(1/$sprite-base-font-size) -590em*(1/$sprite-base-font-size);\n    width: 21em*(1/$sprite-base-font-size);\n    height: 21em*(1/$sprite-base-font-size);\n}\n\n","/*\n * Vendor \"display: flex\" support with fallback to obsolete versions.\n */\n\nflex-version ?= box flex\n\n//\n// 1. Display values\n//    - http://www.w3.org/TR/css3-flexbox/#flex-containers\n//\ndisplay(type, args...)\n  if flex == type || inline-flex == type\n    if box in flex-version\n      if flex == type\n        display: -ms-flexbox args\n        display: vendor-value(box args, only: moz webkit)\n      else\n        display: -ms-inline-flexbox args\n        display: vendor-value(inline-box args, only: moz webkit)\n    if flex in flex-version\n      display: vendor-value(arguments, only: webkit official) // overwrites old webkit\n  else\n    display: arguments\n\n/*\n * New syntax for browsers like Google Chrome.\n * Plus a translation to the old syntax, if possible.\n */\n\n\n//\n// 5. Ordering and Orientation\n//    - http://www.w3.org/TR/css3-flexbox/#ordering-and-orientation\n//\n-flex-obsolete-direction(direction)\n  if box in flex-version\n    if row-reverse == direction || column-reverse == direction\n      vendor('box-direction', reverse, ignore: ms official)\n\n    if row == direction || row-reverse == direction\n      vendor('box-orient', horizontal, ignore: ms official)\n    else if column == direction || column-reverse == direction\n      vendor('box-orient', vertical, ignore: ms official)\n\n-flex-obsolete-wrap(value)\n  if box in flex-version\n    // WARN: wrap-reverse does not have a box equivalent. This will render in different manners\n    //    on box vs. flex values.\n    if 'wrap' == value || wrap-reverse == value\n      vendor('box-lines', multiple, ignore: ms official)\n    else if nowrap == value\n      vendor('box-lines', single, ignore: ms official)\n\nflex-direction(direction)\n  // obsolete\n  -flex-obsolete-direction(direction)\n\n  // new\n  if flex in flex-version\n    vendor('flex-direction', arguments, only: webkit ms official)\n\nflex-wrap(value)\n  // obsolete\n  -flex-obsolete-wrap(value)\n\n  if flex in flex-version\n    vendor('flex-wrap', arguments, only: webkit ms official)\n\nflex-flow()\n  // obsolete\n  -flex-obsolete-direction(arguments[0])\n  -flex-obsolete-direction(arguments[1])\n  -flex-obsolete-wrap(arguments[0])\n  -flex-obsolete-wrap(arguments[1])\n\n  // new\n  if flex in flex-version\n    vendor('flex-flow', arguments, only: webkit ms official)\n\n\norder()\n  // obsolete\n  if box in flex-version\n    vendor('box-ordinal-group', arguments, ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-order', arguments, only: ms)\n    vendor('order', arguments, only: webkit official)\n\n\n//\n// 7. Flexibility\n//    - http://www.w3.org/TR/css3-flexbox/#flexibility\n//\nflex-grow(growth)\n  // obsolete\n  if box in flex-version\n    vendor('box-flex', growth)\n\n  // new\n  if flex in flex-version\n    vendor('flex-grow', arguments, only: webkit official)\n\nflex-basis()\n  if flex in flex-version\n    vendor('flex-basis', arguments, only: webkit official)\n\nflex-shrink()\n  if flex in flex-version\n    vendor('flex-shrink', arguments, only: webkit official)\n\nflex(growth)\n\n  // obsolete\n  if box in flex-version\n    shrink = 1\n\n    if none == growth || initial == growth\n      // Well known values\n      shrink = 0 if none == growth\n      growth = 0\n    else if is-width(growth) == true\n      // Basis is defined as the first parameter\n      growth = arguments[1] || 0\n      shrink = arguments[2] if 3 <= length(arguments)\n    else if arguments[1] && is-width(arguments[1]) == false\n      // Growth is first and shrink is second\n      shrink = arguments[1]\n\n    // Since we can't make the distinction between growing and shrinking in the box model, take\n    // the one that provides the most flexibility.\n    vendor('box-flex', max(growth, shrink), ignore: ms)\n\n  // new\n  if flex in flex-version\n    vendor('flex', arguments, only: webkit ms official)\n\n\n// converts the justification alignment\n-convert-justify(align)\n  if flex-start == align\n    return start\n  else if flex-end == align\n    return end\n  else if space-around == align\n    return distribute\n  else if space-between == align\n    return justify\n  else\n    return align\n\n//\n// 8. Alignment\n//    - http://www.w3.org/TR/css3-flexbox/#alignment\n//\njustify-content(align)\n  // obsolete\n  if box in flex-version\n    vendor('box-pack', -convert-justify(align), ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-pack', -convert-justify(align), only: ms)\n    vendor('justify-content', align, only: webkit official)\n\nalign-content(align)\n  // WARN: Obsolete spec does not allow for adjustment here\n  if flex in flex-version\n    vendor('flex-line-pack', -convert-justify(align), only: ms)\n    vendor('align-content', align, only: webkit official)\n\n// converts alignment from 'flex' to normal value\n-convert-alignment(align)\n  if flex-start == align\n    return start\n  else if flex-end == align\n    return end\n  else\n    return align\n\nalign-items(align)\n  // obsolete\n  if box in flex-version\n    vendor('box-align', -convert-alignment(align), ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-align', -convert-alignment(align), only: ms)\n    vendor('align-items', arguments, only: webkit official)\n\nalign-self(align)\n  // WARN: Obsolete spec does not allow for overriding alignment on individual items.\n  if flex in flex-version\n    vendor('align-self', align, only: webkit official)\n    vendor('flex-item-align', -convert-alignment(align), only: ms)\n",".sprite {\n  font-size: 10px;\n  vertical-align: middle;\n  line-height: 1;\n  position: relative;\n  top: 1px;\n  display: inline-block;\n}\n.sprite {\n  background-repeat: no-repeat;\n  background-image: url(\"img/iconsprites/sprite.svg\");\n  -webkit-background-size: 6.9em 61.1em;\n  -moz-background-size: 6.9em 61.1em;\n  background-size: 6.9em 61.1em;\n}\n.no-svg .sprite {\n  background-image: url(\"img/iconsprites/sprite.png\");\n}\n.sprite-facebook_logo_big {\n  background-position: 0em 0em;\n  width: 2.7em;\n  height: 2.6em;\n}\n.sprite-facebook_logo_footer {\n  background-position: 0em -2.6em;\n  width: 1.6em;\n  height: 1.6em;\n}\n.sprite-facebook_logo_footer_white {\n  background-position: 0em -4.2em;\n  width: 1.6em;\n  height: 1.6em;\n}\n.sprite-instagram_logo_big {\n  background-position: 0em -5.800000000000001em;\n  width: 2.8em;\n  height: 2.6em;\n}\n.sprite-instagram_logo_footer {\n  background-position: 0em -8.4em;\n  width: 1.7em;\n  height: 1.6em;\n}\n.sprite-instagram_logo_footer_white {\n  background-position: 0em -10em;\n  width: 1.7em;\n  height: 1.6em;\n}\n.sprite-instagram_logo_posts {\n  background-position: 0em -11.600000000000001em;\n  width: 3.8em;\n  height: 3.6em;\n}\n.sprite-linkedin {\n  background-position: 0em -15.200000000000001em;\n  width: 1.527em;\n  height: 1.5651em;\n}\n.sprite-post-arrow-left {\n  background-position: 0em -16.8em;\n  width: 1em;\n  height: 1.5em;\n}\n.sprite-post-facebook-share {\n  background-position: 0em -18.3em;\n  width: 1.6em;\n  height: 1.6em;\n}\n.sprite-slider-arrow-left {\n  background-position: 0em -19.900000000000002em;\n  width: 6.9em;\n  height: 10.100000000000001em;\n}\n.sprite-slider-arrow-left-mobile {\n  background-position: 0em -30em;\n  width: 5em;\n  height: 6.5em;\n}\n.sprite-slider-arrow-right {\n  background-position: 0em -36.5em;\n  width: 6.9em;\n  height: 10.100000000000001em;\n}\n.sprite-slider-arrow-right-mobile {\n  background-position: 0em -46.6em;\n  width: 5em;\n  height: 6.4em;\n}\n.sprite-slider-dot {\n  background-position: 0em -53em;\n  width: 1em;\n  height: 1em;\n}\n.sprite-slider-dot-current {\n  background-position: 0em -54em;\n  width: 1em;\n  height: 1em;\n}\n.sprite-x_close_desktop {\n  background-position: 0em -55em;\n  width: 4em;\n  height: 4em;\n}\n.sprite-x_close_mobile {\n  background-position: 0em -59em;\n  width: 2.1em;\n  height: 2.1em;\n}\nhtml {\n  font-family: sans-serif;\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n}\nbody {\n  margin: 0;\n}\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nnav,\nsection,\nsummary {\n  display: block;\n}\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block;\n  vertical-align: baseline;\n}\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n[hidden],\ntemplate {\n  display: none;\n}\na {\n  background: transparent;\n}\na:active,\na:hover {\n  outline: 0;\n}\nabbr[title] {\n  border-bottom: 1px dotted;\n}\nb,\nstrong {\n  font-weight: bold;\n}\ndfn {\n  font-style: italic;\n}\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\nmark {\n  background: #ff0;\n  color: #000;\n}\nsmall {\n  font-size: 80%;\n}\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\nsup {\n  top: -0.5em;\n}\nsub {\n  bottom: -0.25em;\n}\nimg {\n  border: 0;\n}\nsvg:not(:root) {\n  overflow: hidden;\n}\nfigure {\n  margin: 1em 40px;\n}\nhr {\n  -moz-box-sizing: content-box;\n  -webkit-box-sizing: content-box;\n  -moz-box-sizing: content-box;\n  box-sizing: content-box;\n  height: 0;\n}\npre {\n  overflow: auto;\n}\ncode,\nkbd,\npre,\nsamp {\n  font-family: 'Bitstream Vera Sans Mono', Consolas, Courier, monospace, 'Bitstream Vera Sans Mono', Consolas, Courier, monospace;\n  font-size: 1em;\n}\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  color: inherit;\n  font: inherit;\n  margin: 0;\n}\nbutton {\n  overflow: visible;\n}\nbutton,\nselect {\n  text-transform: none;\n}\nbutton,\nhtml input[type=\"button\"],\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: button;\n  cursor: pointer;\n}\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default;\n}\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n}\ninput {\n  line-height: normal;\n}\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n  padding: 0;\n}\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\ninput[type=\"search\"] {\n  -webkit-appearance: textfield;\n  -moz-box-sizing: content-box;\n  -webkit-box-sizing: content-box;\n  -webkit-box-sizing: content-box;\n  -moz-box-sizing: content-box;\n  box-sizing: content-box;\n}\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em;\n}\nlegend {\n  border: 0;\n  padding: 0;\n}\ntextarea {\n  overflow: auto;\n}\noptgroup {\n  font-weight: bold;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\ntd,\nth {\n  padding: 0;\n}\nbody {\n  font-weight: inherit;\n  font-style: inherit;\n  font-family: inherit;\n  font-size: 100%;\n  vertical-align: baseline;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  lost-utility: edit;\n}\nhtml {\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n*,\n*:before,\n*:after {\n  -webkit-box-sizing: inherit;\n  -moz-box-sizing: inherit;\n  box-sizing: inherit;\n}\nimg,\nvideo,\niframe {\n  max-width: 100%;\n  height: auto;\n  border: 0;\n  -ms-interpolation-mode: bicubic;\n  display: block;\n}\n@media print {\n  body {\n    width: 100% !important;\n    margin: 0 !important;\n    padding: 0 !important;\n    font-size: 14pt;\n    line-height: 1.45;\n    font-family: Garamond, \"Times New Roman\", serif;\n    color: #000;\n    background: none;\n  }\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    page-break-after: avoid;\n    font-family: \"Helvetica\", Arial, sans-serif;\n  }\n  h1 {\n    font-size: 36pt;\n    line-height: 1.25em;\n  }\n  h2 {\n    font-size: 24pt;\n    line-height: 1.25em;\n  }\n  h3 {\n    font-size: 18pt;\n    line-height: 1.25em;\n  }\n  h4,\n  h5,\n  h6 {\n    font-size: 14pt;\n    line-height: 1.25em;\n  }\n  p,\n  h2,\n  h3 {\n    orphans: 3;\n    widows: 3;\n  }\n  code {\n    font: 12pt Courier, 'Bitstream Vera Sans Mono', Consolas, Courier, monospace;\n  }\n  blockquote {\n    margin: 1.2em;\n    padding: 1em;\n    font-size: 24pt;\n    line-height: 1.45833333em;\n    font-style: italic;\n  }\n  hr {\n    background-color: #ccc;\n  }\n  img {\n    float: left;\n    margin: 1em 1.5em 1.5em 0;\n    max-width: 100% !important;\n  }\n  a img {\n    border: none;\n  }\n  a:link,\n  a:visited {\n    background: transparent;\n    font-weight: 700;\n    text-decoration: underline;\n    color: #333;\n  }\n  a:link[href^=\"http://\"]:after,\n  a[href^=\"http://\"]:visited:after {\n    content: \" (\" attr(href) \") \";\n    font-size: 90%;\n  }\n  abbr[title]:after {\n    content: \" (\" attr(title) \")\";\n  }\n  a[href^=\"http://\"] {\n    color: #000;\n  }\n  a[href$=\".jpg\"]:after,\n  a[href$=\".jpeg\"]:after,\n  a[href$=\".gif\"]:after,\n  a[href$=\".png\"]:after {\n    content: \" (\" attr(href) \") \";\n    display: none;\n  }\n  a[href^=\"#\"]:after,\n  a[href^=\"javascript:\"]:after {\n    content: \"\";\n  }\n  table {\n    margin: 1px;\n    text-align: left;\n  }\n  th {\n    border-bottom: 1px solid #333;\n    font-weight: bold;\n  }\n  td {\n    border-bottom: 1px solid #333;\n  }\n  th,\n  td {\n    padding: 4px 10px 4px 0;\n  }\n  tfoot {\n    font-style: italic;\n  }\n  caption {\n    background: #fff;\n    margin-bottom: 2em;\n    text-align: left;\n  }\n  thead {\n    display: table-header-group;\n  }\n  img,\n  tr {\n    page-break-inside: avoid;\n  }\n}\nhtml {\n  font-family: 'Garamond', 'Baskerville', 'Baskerville Old Face', 'Hoefler Text', 'Times New Roman', 'serif';\n  font-weight: 300;\n  color: #666;\n  font-size: 14px;\n  line-height: 1.75em;\n}\n@media (min-width: 400px) {\n  html {\n    font-size: calc( 14px + (20 - 14) * ((100vw - 400px) / (1440 - 400)) );\n  }\n}\n@media (min-width: 1440px) {\n  html {\n    font-size: 20px;\n  }\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd {\n  margin: 0;\n  padding: 0;\n}\np,\nblockquote,\npre,\naddress,\ndl,\nol,\nul,\ntable {\n  margin-bottom: 1.75em;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-family: 'Futura', 'Trebuchet MS', 'Arial', 'sans-serif';\n  font-weight: 500;\n  color: #111;\n  clear: both;\n}\nh1 {\n  font-size: 32.49678827773071px;\n  margin-top: 0.942400822452556em;\n  line-height: 1.130880986943067em;\n  margin-bottom: 0.188480164490511em;\n}\n@media (min-width: 400px) {\n  h1 {\n    font-size: calc( 32.49678827773071px + (46.423983253901014 - 32.49678827773071) * ((100vw - 400px) / (1440 - 400)) );\n  }\n}\n@media (min-width: 1440px) {\n  h1 {\n    font-size: 46.423983253901014px;\n    margin-top: 0.942400822452556em;\n    line-height: 1.130880986943067em;\n    margin-bottom: 0.188480164490511em;\n  }\n}\nh2 {\n  font-size: 27.459837310039262px;\n  margin-top: 1.115265165420465em;\n  line-height: 1.338318198504558em;\n  margin-bottom: 0.247421680709243em;\n}\n@media (min-width: 400px) {\n  h2 {\n    font-size: calc( 27.459837310039262px + (39.228339014341806 - 27.459837310039262) * ((100vw - 400px) / (1440 - 400)) );\n  }\n}\n@media (min-width: 1440px) {\n  h2 {\n    font-size: 39.228339014341806px;\n    margin-top: 1.115265165420465em;\n    line-height: 1.338318198504558em;\n    margin-bottom: 0.240111086421698em;\n  }\n}\nh3 {\n  font-size: 23.203605804040404px;\n  margin-top: 1.319837970815179em;\n  line-height: 1.583805564978215em;\n  margin-bottom: 0.298096030457675em;\n}\n@media (min-width: 400px) {\n  h3 {\n    font-size: calc( 23.203605804040404px + (33.14800829148629 - 23.203605804040404) * ((100vw - 400px) / (1440 - 400)) );\n  }\n}\n@media (min-width: 1440px) {\n  h3 {\n    font-size: 33.14800829148629px;\n    margin-top: 1.319837970815179em;\n    line-height: 1.583805564978215em;\n    margin-bottom: 0.287857499569283em;\n  }\n}\nh4 {\n  font-size: 19.6070834735957px;\n  margin-top: 1.561935513828041em;\n  line-height: 1.87432261659365em;\n  margin-bottom: 0.360184181283628em;\n}\n@media (min-width: 400px) {\n  h4 {\n    font-size: calc( 19.6070834735957px + (28.01011924799386 - 19.6070834735957) * ((100vw - 400px) / (1440 - 400)) );\n  }\n}\n@media (min-width: 1440px) {\n  h4 {\n    font-size: 28.01011924799386px;\n    margin-top: 1.561935513828041em;\n    line-height: 1.87432261659365em;\n    margin-bottom: 0.345845057728222em;\n  }\n}\nh5 {\n  font-size: 16.56801643620442px;\n  margin-top: 1.84844094752817em;\n  line-height: 2.218129137033805em;\n  margin-bottom: 0.369688189505634em;\n}\n@media (min-width: 400px) {\n  h5 {\n    font-size: calc( 16.56801643620442px + (23.668594908863454 - 16.56801643620442) * ((100vw - 400px) / (1440 - 400)) );\n  }\n}\n@media (min-width: 1440px) {\n  h5 {\n    font-size: 23.668594908863454px;\n    margin-top: 1.84844094752817em;\n    line-height: 2.218129137033805em;\n    margin-bottom: 0.369688189505634em;\n  }\n}\nh6 {\n  font-size: 14px;\n  margin-top: 2.1875em;\n  line-height: 2.625em;\n  margin-bottom: 0.59375em;\n}\n@media (min-width: 400px) {\n  h6 {\n    font-size: calc( 14px + (20 - 14) * ((100vw - 400px) / (1440 - 400)) );\n  }\n}\n@media (min-width: 1440px) {\n  h6 {\n    font-size: 20px;\n    margin-top: 2.1875em;\n    line-height: 2.625em;\n    margin-bottom: 0.46875em;\n  }\n}\nblockquote {\n  font-style: italic;\n}\nblockquote cite {\n  display: block;\n  font-style: normal;\n}\npre {\n  padding: 0.875em;\n  margin-bottom: 1.75em;\n}\npre code {\n  padding: 0;\n}\ncode {\n  font-family: 'Courier New', 'Courier', 'Lucida Sans Typewriter', 'Lucida Typewriter', 'monospace';\n  padding: 0.0875em 0.2625em;\n  line-height: 0;\n}\nbig,\nsmall,\nsub,\nsup {\n  line-height: 0;\n}\nabbr,\nacronym {\n  border-bottom: 1px dotted currentColor;\n  cursor: help;\n}\naddress {\n  font-style: normal;\n}\ndt {\n  color: #111;\n  font-weight: bold;\n}\nul {\n  padding-left: 1.1em;\n}\nol {\n  padding-left: 1.4em;\n}\nfieldset {\n  padding: 0.875em 1.75em 1.75em;\n  border-width: 1px;\n  border-style: solid;\n  max-width: 100%;\n  margin-bottom: 1.8375em;\n}\n@media (min-width: 1440px) {\n  fieldset {\n    margin-bottom: 2.078125em;\n  }\n}\nfieldset button,\nfieldset input[type=\"submit\"] {\n  margin-bottom: 0;\n}\nlegend {\n  color: #111;\n  font-weight: bold;\n}\nlabel {\n  display: block;\n  padding-bottom: 0.21875em;\n  margin-bottom: -0.21875em;\n}\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"password\"],\ntextarea {\n  display: block;\n  max-width: 100%;\n  padding: 0.4375em;\n  font-size: 14px;\n  margin-bottom: 1.18125em;\n}\n@media (min-width: 400px) {\n  input[type=\"text\"],\n  input[type=\"email\"],\n  input[type=\"password\"],\n  textarea {\n    font-size: calc( 14px + (20 - 14) * ((100vw - 400px) / (1440 - 400)) );\n  }\n}\n@media (min-width: 1440px) {\n  input[type=\"text\"],\n  input[type=\"email\"],\n  input[type=\"password\"],\n  textarea {\n    font-size: 20px;\n    margin-bottom: 0.5140625em;\n  }\n}\ninput[type=\"submit\"],\nbutton {\n  display: block;\n  cursor: pointer;\n  font-size: 14px;\n  padding: 0.4375em 1.75em;\n  margin-bottom: 1.18125em;\n}\n@media (min-width: 400px) {\n  input[type=\"submit\"],\n  button {\n    font-size: calc( 14px + (20 - 14) * ((100vw - 400px) / (1440 - 400)) );\n  }\n}\n@media (min-width: 1440px) {\n  input[type=\"submit\"],\n  button {\n    font-size: 20px;\n    margin-bottom: 1.3125em;\n  }\n}\ntable {\n  width: 100%;\n  border-spacing: 0;\n  border-collapse: collapse;\n  margin-bottom: 2.1875em;\n}\n@media (min-width: 1440px) {\n  table {\n    margin-bottom: 2.05625em;\n  }\n}\nth {\n  text-align: left;\n  color: #111;\n  padding: 0.21875em 0.875em;\n}\n@media (min-width: 1440px) {\n  th {\n    padding: 0.4375em 0.875em;\n  }\n}\ntd {\n  padding: 0.21875em 0.875em;\n}\n@media (min-width: 1440px) {\n  td {\n    padding: 0.4375em 0.875em;\n  }\n}\n@lost flexbox no-flex;\n.container {\n  lost-utility: clearfix;\n  lost-center: 1440px 20px;\n}\n@media only screen and (min-width: 600px) {\n  .column {\n    lost-column: 1/2;\n  }\n}\n@media only screen and (min-width: 600px) {\n  .column-offset {\n    lost-offset: -1/2;\n  }\n}\n.waffle-grid {\n  margin: 30px 0;\n  lost-utility: clearfix;\n}\n.waffle-grid-item {\n  padding: 20px;\n  background: #40d451;\n  background: #29b83a -webkit-linear-gradient(top, #40d451, #29b83a) repeat-x;\n  background: #29b83a -moz-linear-gradient(top, #40d451, #29b83a) repeat-x;\n  background: #29b83a -o-linear-gradient(top, #40d451, #29b83a) repeat-x;\n  background: #29b83a -ms-linear-gradient(top, #40d451, #29b83a) repeat-x;\n  background: #29b83a linear-gradient(to bottom, #40d451, #29b83a) repeat-x;\n  lost-waffle: 1/3;\n  text-align: center;\n}\n.waffle-grid-item.waffle-grid-item--nopadding {\n  lost-waffle: 1/3 3 0;\n}\n.column-no-gutters {\n  background: #e44921;\n  background: #bc3917 -webkit-linear-gradient(top, #e44921, #bc3917) repeat-x;\n  background: #bc3917 -moz-linear-gradient(top, #e44921, #bc3917) repeat-x;\n  background: #bc3917 -o-linear-gradient(top, #e44921, #bc3917) repeat-x;\n  background: #bc3917 -ms-linear-gradient(top, #e44921, #bc3917) repeat-x;\n  background: #bc3917 linear-gradient(to bottom, #e44921, #bc3917) repeat-x;\n  height: 300px;\n}\n@media only screen and (min-width: 600px) {\n  .column-no-gutters {\n    lost-column: 1/2 2 0;\n  }\n}\n.grid-row {\n  lost-utility: clearfix;\n}\n.align-parent {\n  lost-align: center;\n  width: 100%;\n  height: 100vh;\n  background: #e44921;\n  background: #bc3917 -webkit-linear-gradient(top, #e44921, #bc3917) repeat-x;\n  background: #bc3917 -moz-linear-gradient(top, #e44921, #bc3917) repeat-x;\n  background: #bc3917 -o-linear-gradient(top, #e44921, #bc3917) repeat-x;\n  background: #bc3917 -ms-linear-gradient(top, #e44921, #bc3917) repeat-x;\n  background: #bc3917 linear-gradient(to bottom, #e44921, #bc3917) repeat-x;\n  color: #fff;\n}\n.align-child {\n  width: 500px;\n}\n.row-container {\n  height: 100vh;\n}\n.row {\n  lost-align: center;\n  lost-utility: clearfix;\n  lost-row: 1/3 0;\n  background: #2ecc40;\n  background: #0074d9 -webkit-linear-gradient(top, #2ecc40, #0074d9) repeat-x;\n  background: #0074d9 -moz-linear-gradient(top, #2ecc40, #0074d9) repeat-x;\n  background: #0074d9 -o-linear-gradient(top, #2ecc40, #0074d9) repeat-x;\n  background: #0074d9 -ms-linear-gradient(top, #2ecc40, #0074d9) repeat-x;\n  background: #0074d9 linear-gradient(to bottom, #2ecc40, #0074d9) repeat-x;\n}\n.button {\n  font-size: 18px;\n  padding: 14px 30px;\n  border-radius: 4px;\n  background-color: #d13f19;\n  color: #fff;\n  cursor: pointer;\n  font-weight: bold;\n  font-family: \"Helvetica Neue\", HelveticaNeue, Helvetica, Arial, sans-serif;\n  line-height: 1em;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  border: none;\n  box-shadow: 0 2px 10px rgba(34,34,34,0.5);\n  -webkit-transition: box-shadow ease 0.3s;\n  -moz-transition: box-shadow ease 0.3s;\n  -o-transition: box-shadow ease 0.3s;\n  -ms-transition: box-shadow ease 0.3s;\n  transition: box-shadow ease 0.3s;\n}\n.button:hover,\n.button:focus {\n  background-color: #c73c18;\n  color: #f7f7f7;\n  border: none;\n}\n.button:active {\n  background-color: #bc3917;\n}\n.button:hover {\n  box-shadow: 0 0 2px rgba(34,34,34,0.5);\n}\n.button--glossy {\n  font-size: 18px;\n  padding: 14px 30px;\n  border-radius: 4px;\n  background: #ff9132;\n  background: #fe7600 -webkit-linear-gradient(top, #ff9132, #fe7600) repeat-x;\n  background: #fe7600 -moz-linear-gradient(top, #ff9132, #fe7600) repeat-x;\n  background: #fe7600 -o-linear-gradient(top, #ff9132, #fe7600) repeat-x;\n  background: #fe7600 -ms-linear-gradient(top, #ff9132, #fe7600) repeat-x;\n  background: #fe7600 linear-gradient(to bottom, #ff9132, #fe7600) repeat-x;\n  text-shadow: 1px 1px 1px rgba(0,0,0,0.1);\n  border: 1px solid #fe7600;\n  color: #fff;\n  box-shadow: inset 0 1px 0 rgba(255,255,255,0.3);\n  cursor: pointer;\n  font-weight: bold;\n  font-family: \"Helvetica Neue\", HelveticaNeue, Helvetica, Arial, sans-serif;\n  line-height: 1em;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  box-shadow: 0 0 1px transparent;\n  -webkit-transition: all ease 0.2s;\n  -moz-transition: all ease 0.2s;\n  -o-transition: all ease 0.2s;\n  -ms-transition: all ease 0.2s;\n  transition: all ease 0.2s;\n}\n.button--glossy:hover,\n.button--glossy:focus {\n  background-position: 0 -14px;\n  color: #f7f7f7;\n  text-shadow: 1px 1px 1px rgba(0,0,0,0.2);\n}\n.button--glossy:active {\n  box-shadow: inset 0 1px 6.923076923076922px rgba(211,98,0,0.6);\n  text-shadow: 0 -1px 1px rgba(0,0,0,0.2);\n  border-color: #e76c00;\n}\n.button--glossy:hover {\n  position: relative;\n  z-index: 10;\n  -webkit-transform: scale(1.2);\n  -moz-transform: scale(1.2);\n  -o-transform: scale(1.2);\n  -ms-transform: scale(1.2);\n  transform: scale(1.2);\n  box-shadow: 0 0 5px rgba(0,0,0,0.3);\n  -webkit-transform: scale(1.2) rotate(3deg);\n  -moz-transform: scale(1.2) rotate(3deg);\n  -o-transform: scale(1.2) rotate(3deg);\n  -ms-transform: scale(1.2) rotate(3deg);\n  transform: scale(1.2) rotate(3deg);\n}\n.bubble {\n  color: #fff;\n  background: #d8411a;\n  background: #cb3d18 -webkit-linear-gradient(top, #d8411a, #cb3d18) repeat-x;\n  background: #cb3d18 -moz-linear-gradient(top, #d8411a, #cb3d18) repeat-x;\n  background: #cb3d18 -o-linear-gradient(top, #d8411a, #cb3d18) repeat-x;\n  background: #cb3d18 -ms-linear-gradient(top, #d8411a, #cb3d18) repeat-x;\n  background: #cb3d18 linear-gradient(to bottom, #d8411a, #cb3d18) repeat-x;\n  border-radius: 5px;\n  padding: 20px;\n  border: 1px solid #bc3917;\n  box-shadow: 1px 1px 3px rgba(0,0,0,0.05);\n  position: relative;\n}\n.bubble:before,\n.bubble:after {\n  content: \"\";\n  display: table;\n}\n.bubble:after {\n  clear: both;\n}\n.bubble:before {\n  margin-top: auto;\n  margin-left: auto;\n  width: 0;\n  height: 0;\n  border-left: 16.3px solid transparent;\n  border-right: 16.3px solid transparent;\n  border-top: 16.3px solid #0068c3;\n  position: absolute;\n  bottom: -16.3px;\n  right: 14px;\n  display: block;\n}\n.bubble:after {\n  margin-top: auto;\n  margin-left: auto;\n  width: 0;\n  height: 0;\n  border-left: 15px solid transparent;\n  border-right: 15px solid transparent;\n  border-top: 15px solid #0074d9;\n  position: absolute;\n  bottom: -15px;\n  right: 15px;\n  display: block;\n}\ncode {\n  padding: 3px 4px;\n  color: #0074d9;\n  background-color: #f5f5f5;\n  border: 1px solid #e1e1e8;\n  border-radius: 3px;\n  font-family: Menlo, Monaco, 'Bitstream Vera Sans Mono', Consolas, Courier, monospace;\n}\npre {\n  display: block;\n  padding: 7px;\n  background-color: #f5f5f5;\n  border: 1px solid #e1e1e8;\n  border-radius: 3px;\n  white-space: pre-wrap;\n  word-break: break-all;\n  font-family: Menlo, Monaco, 'Bitstream Vera Sans Mono', Consolas, Courier, monospace;\n  line-height: 160%;\n}\n.table-layout {\n  display: table;\n  table-layout: fixed;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n.table-layout > * {\n  display: table-cell;\n}\ntable {\n  max-width: 100%;\n  border-collapse: collapse;\n  border-spacing: 0;\n  width: 100%;\n  margin-bottom: 18px;\n  border: 1px solid #ddd;\n  border-collapse: separate;\n  *border-collapse: collapsed;\n  border-radius: 4px;\n}\ntable th,\ntable td {\n  padding: 8px;\n  line-height: 18px;\n  text-align: left;\n  vertical-align: top;\n  border-top: 1px solid #ddd;\n}\ntable th {\n  font-weight: bold;\n}\ntable thead th {\n  vertical-align: bottom;\n}\ntable thead:first-child tr th,\ntable thead:first-child tr td {\n  border-top: 0;\n}\ntable tbody + tbody {\n  border-top: 2px solid #ddd;\n}\ntable th + th,\ntable td + td,\ntable th + td,\ntable td + th {\n  border-left: 1px solid #ddd;\n}\ntable thead:first-child tr:first-child th,\ntable tbody:first-child tr:first-child th,\ntable tbody:first-child tr:first-child td {\n  border-top: 0;\n}\ntable thead:first-child tr:first-child th:first-child,\ntable tbody:first-child tr:first-child td:first-child {\n  border-radius: 4px 0 0 0;\n}\ntable thead:first-child tr:first-child th:last-child,\ntable tbody:first-child tr:first-child td:last-child {\n  border-radius: 0 4px 0 0;\n}\ntable thead:last-child tr:last-child th:first-child,\ntable tbody:last-child tr:last-child td:first-child {\n  border-radius: 0 0 0 4px;\n}\ntable thead:last-child tr:last-child th:last-child,\ntable tbody:last-child tr:last-child td:last-child {\n  border-radius: 0 0 4px 0;\n}\ntable tbody tr:nth-child(odd) td,\ntable tbody tr:nth-child(odd) th {\n  background-color: #f9f9f9;\n}\ntable tbody tr:hover td,\ntable tbody tr:hover th {\n  background-color: #f5f5f5;\n}\nform .field {\n  clear: both;\n  margin-bottom: 5px;\n  text-align: left;\n  width: 370px;\n  max-width: 100%;\n}\nform .field.error {\n  color: #d13f19;\n}\nform .field.error input {\n  color: #d13f19;\n  border-color: #d13f19;\n}\nform .field.error input:focus {\n  box-shadow: 0 0 5px rgba(209,63,25,0.7);\n  border: 1px solid #b15239;\n  outline: none;\n}\nform .field.success {\n  color: #2ecc40;\n}\nform .field.success input {\n  color: #2ecc40;\n  border-color: #2ecc40;\n}\nform .field.success input:focus {\n  box-shadow: 0 0 5px rgba(46,204,64,0.7);\n  border: 1px solid #4ab055;\n  outline: none;\n}\nform .field.warning {\n  color: #d9bb00;\n}\nform .field.warning input {\n  color: #d9bb00;\n  border-color: #ffdc00;\n}\nform .field.warning input:focus {\n  box-shadow: 0 0 5px rgba(255,220,0,0.7);\n  border: 1px solid #d2bc2d;\n  outline: none;\n}\ninput {\n  box-shadow: inset 0 1px 1px rgba(0,0,0,0.1);\n  -webkit-font-smoothing: antialiased;\n  font-size: 16px;\n  font-family: \"Helvetica Neue\", HelveticaNeue, Helvetica, Arial, sans-serif;\n  border: solid 1px #bbb;\n  border-radius: 0.2em;\n  outline: none;\n  padding: 0.45em;\n  background: #fff;\n  color: #555;\n  width: 250px;\n  text-shadow: 0 0 1px rgba(255,255,255,0.1);\n  -webkit-transition: all .3s ease;\n  -moz-transition: all .3s ease;\n  -o-transition: all .3s ease;\n  -ms-transition: all .3s ease;\n  transition: all .3s ease;\n}\ninput:focus {\n  box-shadow: 0 0 5px rgba(127,219,255,0.7);\n  border: 1px solid #95d1e9;\n  outline: none;\n}\nlabel {\n  line-height: 1.5em;\n  display: inline-block;\n}\nlabel.label--block {\n  line-height: 1.5em;\n  display: block;\n}\n.icons-container {\n  border: 2px #ff851b solid;\n  border-radius: 10px;\n  box-shadow: 0px 0px 5px rgba(34,34,34,0.5) inset;\n  background: #ffdec2;\n  background: #ffc28f -webkit-linear-gradient(top, #ffdec2, #ffc28f) repeat-x;\n  background: #ffc28f -moz-linear-gradient(top, #ffdec2, #ffc28f) repeat-x;\n  background: #ffc28f -o-linear-gradient(top, #ffdec2, #ffc28f) repeat-x;\n  background: #ffc28f -ms-linear-gradient(top, #ffdec2, #ffc28f) repeat-x;\n  background: #ffc28f linear-gradient(to bottom, #ffdec2, #ffc28f) repeat-x;\n  lost-utility: clearfix;\n}\n.icons-container .icon {\n  text-align: center;\n  padding: 20px 0;\n  lost-column: 1/2;\n}\n@media only screen and (min-width: 400px) {\n  .icons-container .icon {\n    padding: 40px 0;\n    lost-column: 1/3;\n  }\n}\n@media only screen and (min-width: 800px) {\n  .icons-container .icon {\n    lost-column: 1/6;\n  }\n}\n","use('../nodes/vendor-helpers.js')\n@import 'config'\n\n/*\n * Alias \"nowrap\" as \"no-wrap\".\n */\n\nno-wrap = unquote('nowrap')\n\n/*\n * Helper to find out if a given value is a width\n */\n\nis-width(val)\n  if auto == val\n    return true\n  else if val && 'unit' == type(val)\n    // Stylus does not short circuit so we need to perform this as a distinct\n    // operation to prevent errors\n    return '' != unit(val)\n  return false\n\n/*\n * Vendor support for the given prop / arguments, optionally specifying the\n * only prefixes to utilize, or those which should be ignored.\n */\n\nvendor(prop, args, only = null, ignore = null, vendor-property = true)\n  need_normalize = !vendor-property or prop in ('transition' 'transition-property' 'border-image' 'border-image-slice')\n  for prefix in vendor-prefixes\n    unless (only and !(prefix in only)) or (ignore and prefix in ignore)\n      if official == prefix\n        if need_normalize\n          {prop}: normalize(prop,('%s' % args))\n        else\n          {prop}: args\n      else\n        newprop = prop\n        newprop = '-' + prefix + '-' + prop if vendor-property\n\n        if need_normalize\n          {newprop}: normalize(prop,('%s' % args),prefix)\n        else\n          {newprop}: args\n/*\n * Vendorize the given value.\n */\n\nvendor-value(arg, only = null, ignore = null)\n  prop = current-property[0]\n  for prefix in vendor-prefixes\n    unless (only and !(prefix in only)) or (ignore and prefix in ignore) or official == prefix\n      add-property(prop, '-%s-%s' % (prefix arg))\n  arg\n\n/*\n * Vendor \"box-shadow\" support.\n */\n\nbox-shadow()\n  vendor('box-shadow', arguments, only: webkit official)\n\n/*\n * Vendor \"user-select\" support.\n */\n\nuser-select()\n  vendor('user-select', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"column-count\" support.\n */\n\ncolumn-count()\n  vendor('column-count', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-gap\" support.\n */\n\ncolumn-gap()\n  vendor('column-gap', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule\" support.\n */\n\ncolumn-rule()\n  vendor('column-rule', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule-color\" support.\n */\n\ncolumn-rule-color()\n  vendor('column-rule-color', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule-width\" support.\n */\n\ncolumn-rule-width()\n  vendor('column-rule-width', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule-style\" support.\n */\n\ncolumn-rule-style()\n  vendor('column-rule-style', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-width\" support.\n */\n\ncolumn-width()\n  vendor('column-width', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-span\" support.\n */\n\ncolumn-span()\n  vendor('column-span', arguments, only: webkit official)\n\n/*\n * Vendor \"column-fill\" support.\n */\n\ncolumn-fill()\n  vendor('column-fill', arguments, only: moz)\n\n/*\n * Legacy syntax support for background-clip and background-origin\n */\n\nlegacy-bg-values(property, args)\n  legacy_args = ()\n  importance = unquote('')\n  for subargs in args\n    for arg in subargs\n      if arg in (border-box padding-box content-box)\n        arg = unquote('border')  if arg == border-box\n        arg = unquote('padding') if arg == padding-box\n        arg = unquote('content') if arg == content-box\n      if arg != '!important'\n        push(legacy_args,arg)\n      else\n        importance = !important\n  vendor(property, unquote(join(', ',legacy_args)) importance, only: moz webkit)\n\n/*\n * Vendor \"background-clip\" support.\n */\n\nbackground-clip()\n  if arguments[0] == text\n    vendor('background-clip', arguments, only: webkit)\n  else\n    legacy-bg-values('background-clip', arguments)\n    background-clip: arguments\n\n/*\n * Vendor \"background-origin\" support.\n */\n\nbackground-origin()\n  legacy-bg-values('background-origin', arguments)\n  background-origin: arguments\n\n/*\n * Vendor \"background-size\" support.\n */\n\nbackground-size()\n  vendor('background-size', arguments, only: webkit moz official)\n\n/*\n * Vendor \"transform\" support.\n */\n\ntransform()\n  vendor('transform', arguments)\n\n/*\n * Vendor \"transform-origin\" support.\n */\ntransform-origin()\n    vendor('transform-origin', arguments)\n\n/*\n * Vendor \"transform-style\" support.\n */\n\ntransform-style()\n  vendor('transform-style', arguments)\n\n/*\n * Vendor \"border-image\" support.\n */\n\nborder-image()\n  vendor('border-image', arguments, only: webkit moz o official)\n\n/*\n * Vendor \"transition\" support.\n */\n\ntransition()\n  vendor('transition', arguments)\n\n/*\n * Vendor \"transition-property\" support.\n */\n\ntransition-property()\n  vendor('transition-property', arguments)\n\n/*\n * Vendor \"transition-duration\" support.\n */\n\ntransition-duration()\n  vendor('transition-duration', arguments)\n\n/*\n * Vendor \"transition-timing-function\" support.\n */\n\ntransition-timing-function()\n  vendor('transition-timing-function', arguments)\n\n/*\n * Vendor \"transition-delay\" support.\n */\n\ntransition-delay()\n  vendor('transition-delay', arguments)\n\n/*\n * Vendor \"backface-visibility\" support.\n */\n\nbackface-visibility()\n  vendor('backface-visibility', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"perspective\" support.\n */\n\nperspective()\n  if mixin\n    vendor('perspective', arguments, only: webkit moz ms official)\n  else\n    'perspective(%s)' % arguments\n\n/*\n * Vendor \"perspective-origin\" support.\n */\n\nperspective-origin()\n  vendor('perspective-origin', arguments, only: webkit moz ms official)\n\n/*\n * Opacity with conditional IE support.\n */\n\nopacity(n, args...)\n  opacity: n args\n  if support-for-ie\n    if n == inherit or n == initial\n      -ms-filter: n args\n      filter: n args\n    else\n      val = round(n * 100)\n      if val == 100\n        -ms-filter: none args\n        filter: none args\n      else\n        -ms-filter: '\"progid:DXImageTransform.Microsoft.Alpha(Opacity=%s)\"' % val args\n        filter: 'alpha(opacity=%s)' % val args\n\n/*\n * Vendor \"text-size-adjust\"\n */\n\ntext-size-adjust()\n  vendor('text-size-adjust', arguments)\n\n/*\n * Alias the \"white-space\" property.\n */\n\nwhitespace()\n  white-space: arguments\n\n/*\n * Vendor \"box-sizing\" support.\n */\n\nbox-sizing()\n  vendor('box-sizing', arguments, only: webkit moz official)\n\n/*\n * Vendor \"box-orient\" support.\n */\n\nbox-orient()\n  vendor('box-orient', arguments, only: webkit moz official)\n\n/*\n * Vendor \"box-flex-group\" support.\n */\n\nbox-flex-group()\n  vendor('box-flex-group', arguments, only: webkit moz official)\n\n/*\n * Vendor \"box-ordinal-group\" support.\n */\n\nbox-ordinal-group()\n  vendor('box-ordinal-group', arguments, only: webkit moz ms official)\n\n\n/*\n * Vendor \"box-align\" support.\n */\n\nbox-align()\n  vendor('box-align', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"box-pack\" support.\n */\n\nbox-pack()\n  vendor('box-pack', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"box-direction\" support.\n */\n\nbox-direction()\n  vendor('box-direction', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"animation\" support.\n */\n\nanimation()\n  vendor('animation', arguments)\n\n\n/*\n * Vendor \"animation-name\" support.\n */\n\nanimation-name()\n  vendor('animation-name', arguments)\n\n/*\n * Vendor \"animation-duration\" support.\n */\n\nanimation-duration()\n  vendor('animation-duration', arguments)\n\n/*\n * Vendor \"animation-delay\" support.\n */\n\nanimation-delay()\n  vendor('animation-delay', arguments)\n\n/*\n * Vendor \"animation-direction\" support.\n */\n\nanimation-direction()\n  vendor('animation-direction', arguments)\n\n/*\n * Vendor \"animation-iteration-count\" support.\n */\n\nanimation-iteration-count()\n  vendor('animation-iteration-count', arguments)\n\n/*\n * Vendor \"animation-timing-function\" support.\n */\n\nanimation-timing-function()\n  vendor('animation-timing-function', arguments)\n\n/*\n * Vendor \"animation-play-state\" support.\n */\n\nanimation-play-state()\n  vendor('animation-play-state', arguments)\n\n/*\n * Vendor \"animation-fill-mode\" support.\n */\n\nanimation-fill-mode()\n  vendor('animation-fill-mode', arguments)\n\n/*\n * Vendor \"hyphens\" support.\n */\n\nhyphens()\n  vendor('hyphens', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"appearance\" support.\n */\n\nappearance()\n  vendor('appearance', arguments, only: webkit moz official)\n\n/*\n * Vendor \"tab-size\" support.\n */\n\ntab-size()\n  vendor('tab-size', arguments, only: moz o official)\n\n/*\n * Vendor \"overflow-scrolling\" support.\n */\n\noverflow-scrolling()\n  vendor('overflow-scrolling', arguments, only: webkit official)\n\n/*\n * Vendor \"text-overflow\" support, , -o- for opera 9.* - 10.*\n */\n\ntext-overflow()\n  vendor('text-overflow', arguments, only: official o)\n\n/*\n * Vendor \"text-size-adjust\" support.\n */\ntext-size-adjust()\n  vendor('text-size-adjust', arguments, only: official webkit ms)\n\n/*\n * Vendor \"font-smoothing\" support, webkit only.\n */\nfont-smoothing()\n  vendor('font-smoothing', arguments, only: webkit)\n\n/*\n * Helper for border-radius().\n */\n\n-apply-border-radius(pos, importance)\n  if length(pos) == 3\n    // border-radius: <top | buttom> <left | right> <n>\n    y = pos[0]\n    x = pos[1]\n    // We don't use moz for simple boder-radius anymore\n    // vendor('border-radius-%s%s' % pos, pos[2], only: moz)\n    vendor('border-%s-%s-radius' % pos, pos[2] importance, only: webkit official)\n  else if pos[0] in (top bottom)\n    // border-radius: <top | bottom> <n>\n    -apply-border-radius(pos[0] left pos[1], importance)\n    -apply-border-radius(pos[0] right pos[1], importance)\n  else if pos[0] in (left right)\n    // border-radius: <left | right> <n>\n    unshift(pos, top);\n    -apply-border-radius(pos, importance)\n    pos[0] = bottom\n    -apply-border-radius(pos, importance)\n\n/*\n * border-radius supporting vendor prefixes and\n * augmented behavior.\n *\n * Examples:\n *\n *    border-radius: 2px 5px\n *    border-radius: top 5px bottom 10px\n *    border-radius: left 5px\n *    border-radius: top left 5px\n *    border-radius: top left 10px bottom right 5px\n *    border-radius: top left 10px, bottom right 5px\n *\n */\n\nborder-radius()\n  pos = ()\n  augmented = false\n  importance = arguments[length(arguments) - 1] == !important ? !important : unquote('')\n\n  for args in arguments\n    for arg in args\n      if arg is a 'ident'\n        append(pos, arg)\n        augmented = true\n      else\n        append(pos, arg)\n        if augmented\n          -apply-border-radius(pos, importance)\n          pos = ()\n  vendor('border-radius', pos, only: webkit official) unless augmented\n\n/**\n * Vendor input-placeholder/placeholder support.\n *\n * Examples:\n *    // Default syntax\n *    body\n *      placeholder(color #333, font-weight normal)\n *\n *    // The comma is important\n *    .placeholder-red\n *      placeholder(color red,)\n *\n *    // We can pass a function\n *    green-placeholder()\n *      color green\n *    .placeholder-green\n *      placeholder(green-placeholder)\n *\n *    // We can pass a hash\n *    textarea\n *      placeholder((font-style italic) (font-weight bold) (padding '4px 10px'))\n */\nplaceholder()\n  for v in ':-webkit-input' '-moz' ':-moz' '-ms-input'\n    &:{v}-placeholder\n      for pair in arguments\n        if typeof(pair) == 'function'\n          pair()\n        else if pair is not null && pair[0] is not null\n          {pair[0]}: type(pair[1]) == 'string' ? s(pair[1]) : pair[1]\ninput-placeholder = placeholder\n\n/*\n * Vendor background support (gradients).\n */\n\nbackground()\n  if match('-gradient\\(', ''+arguments)\n    vendor('background', arguments, vendor-property: false)\n  else\n    background arguments\n\nbackground-image()\n  if match('-gradient\\(', ''+arguments)\n    vendor('background-image', arguments, vendor-property: false)\n  else\n    background-image arguments\n\ncursor()\n  if match('-gradient\\(', ''+arguments)\n    vendor('cursor', arguments, vendor-property: false)\n  else\n    cursor arguments\n\nlist-style()\n  if match('-gradient\\(', ''+arguments)\n    vendor('list-style', arguments, vendor-property: false)\n  else\n    list-style arguments\n\nlist-style-image()\n  if match('-gradient\\(', ''+arguments)\n    vendor('list-style-image', arguments, vendor-property: false)\n  else\n    list-style-image arguments\n","// -----\n// Reset\n// -----\n\n// global-reset delegated to nib\n\nsupport-for-ie ?= true\n\n// Mixin: Normalize CSS\n// Based on v3.0.1 https://github.com/necolas/normalize.css\n\nnormalize-css()\n  html\n    font-family: sans-serif\n    -ms-text-size-adjust: 100%\n    -webkit-text-size-adjust: 100%\n\n  body\n    margin: 0\n\n  article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary\n    display: block\n\n  audio, canvas, progress, video\n    display: inline-block\n    vertical-align: baseline\n\n  audio:not([controls])\n    display: none\n    height: 0\n\n  [hidden], template\n    display: none\n\n  a\n    background: transparent\n\n    &:active, &:hover\n      outline: 0\n\n  abbr[title]\n    border-bottom: 1px dotted\n\n  b, strong\n    font-weight: bold\n\n  dfn\n    font-style: italic\n\n  h1\n    font-size: 2em\n    margin: 0.67em 0\n\n  mark\n    background: #ff0\n    color: #000\n\n  small\n    font-size: 80%\n\n  sub, sup\n    font-size: 75%\n    line-height: 0\n    position: relative\n    vertical-align: baseline\n\n  sup\n    top: -0.5em\n\n  sub\n    bottom: -0.25em\n\n  img\n    border: 0\n\n  svg:not(:root)\n    overflow: hidden\n\n  figure\n    margin: 1em 40px\n\n  hr\n    -moz-box-sizing: content-box\n    box-sizing: content-box\n    height: 0\n\n  pre\n    overflow: auto\n\n  code, kbd, pre, samp\n    font-family: monospace, monospace\n    font-size: 1em\n\n  button, input, optgroup, select, textarea\n    color: inherit\n    font: inherit\n    margin: 0\n\n  button\n    overflow: visible\n\n  button, select\n    text-transform: none\n\n  button, html input[type=\"button\"], input[type=\"reset\"], input[type=\"submit\"]\n    -webkit-appearance: button\n    cursor: pointer\n\n  button[disabled], html input[disabled]\n    cursor: default\n\n  button::-moz-focus-inner, input::-moz-focus-inner\n    border: 0\n    padding: 0\n\n  input\n    line-height: normal\n\n  input[type=\"checkbox\"], input[type=\"radio\"]\n    box-sizing: border-box\n    padding: 0\n\n  input[type=\"number\"]::-webkit-inner-spin-button, input[type=\"number\"]::-webkit-outer-spin-button\n    height: auto\n\n  input[type=\"search\"]\n    -webkit-appearance: textfield\n    -moz-box-sizing: content-box\n    -webkit-box-sizing: content-box\n    box-sizing: content-box\n\n  input[type=\"search\"]::-webkit-search-cancel-button, input[type=\"search\"]::-webkit-search-decoration\n    -webkit-appearance: none\n\n  fieldset\n    border: 1px solid #c0c0c0\n    margin: 0 2px\n    padding: 0.35em 0.625em 0.75em\n\n  legend\n    border: 0\n    padding: 0\n\n  textarea\n    overflow: auto\n\n  optgroup\n    font-weight: bold\n\n  table\n    border-collapse: collapse\n    border-spacing: 0\n\n  td, th\n    padding: 0\n\n// Mixin: Fluid Media\n// Makes your img, video, and iframe tags responsive to their parent container.\n\nfluid-media()\n  img,\n  video,\n  iframe\n    max-width: 100%\n    height: auto\n    border: 0\n    -ms-interpolation-mode: bicubic\n    display: block\n\n// Mixin: Border Box HTML\n// Add border box to every element in your project. Used in your project root.\n// http://www.paulirish.com/2012/box-sizing-border-box-ftw/\n\nborder-box-html()\n  html\n    box-sizing: border-box\n\n  *,\n  *:before,\n  *:after\n    box-sizing: inherit\n","/*\n * border: <color>\n * border: ...\n */\n\nborder(color, args...)\n  if color is a 'color'\n    border: 1px solid color args\n  else\n    border: arguments\n","/*\n * Overflow utility. Maps to regular overflow, and adds an ellipsis value.\n *\n * Synopsis:\n *\n *   overflow: <type>\n *\n * Examples:\n *\n *     overflow: auto\n *     overflow: hidden\n *     overflow: ellipsis\n *\n */\n\noverflow()\n  if arguments[0] == ellipsis\n    ellipsis()\n  else\n    overflow: arguments\n","@import 'typographic'\n@import 'nib'\n@import 'axis'\n@import 'rupture'\n@import 'styles/_sprite'\n\n// global-reset()\n// nested-reset()\n\n// reset-html5()\n\n// normalize-html5()\n// normalize-base()\n// normalize-links()\n// normalize-text()\n// normalize-embed()\n// normalize-groups()\n// normalize-forms()\n// normalize-tables()\nnormalize-css()\n\nbody\n\t// reset-body()\n\treset-font()\n\treset-box-model()\n\tlost-utility: edit;\n\t\n// table \n// \treset-table()\n// \ttd\n// \t\treset-table-cell()\n\nborder-box-html()\nfluid-media()\nprint-styles()\n\n$line-height-ratio  = 1.75\n$header-ratio       = $golden\n$body-font          = $garamond\n$body-font-weight   = 300\n$body-color         = #666\n$header-font        = $futura\n$header-font-weight = 500\n$header-color       = #111\n$min-font           = 14px\n$max-font           = 20px\n$min-width          = 400px\n$max-width          = 1440px\n$vertical-rhythm    = true\n\n\n\t\t\ntypographic()\n\n\n\n// @lost flexbox flex;\n@lost flexbox no-flex;\n\n.container\n\tlost-utility clearfix\n\tlost-center 1440px 20px\n\n.column\n\t+above('m')\n\t\tlost-column 1/2\n\t\t\n.column-offset\n\t+above('m')\n\t\tlost-offset -1/2\n\n.waffle-grid\n\tmargin 30px 0\n\tlost-utility clearfix\t\n\t\n.waffle-grid-item\n\tpadding 20px\n\tgradient green\n\tlost-waffle 1/3\n\ttext-align center\n\t\n\t&.waffle-grid-item--nopadding\n\t\tlost-waffle 1/3 3 0\n\n.column-no-gutters\n\tgradient red\n\theight 300px\n\t+above('m')\n\t\tlost-column 1/2 2 0\n\t\t\n.grid-row\n\tlost-utility clearfix\n\t\t\n.align-parent\n\t// reset|horizontal|vertical|top-left|top-center|top|top-right|middle-left|left|middle-center|center|middle-right|right|bottom-left|bottom-center|bottom|bottom-right\n\tlost-align center\n\tsize 100% 100vh\n\tgradient: red\n\t// background blue\n\tcolor white\n\t// hover-lighten()\n\n.align-child\n\twidth 500px\n\t\n\n.row-container\n\theight 100vh\n\n.row\n\tlost-align center\n\tlost-utility clearfix\n\tlost-row 1/3 0\n\tgradient: green blue\n\n.button\n\tbutton red 'large'\n\tbox-shadow 0 2px 10px rgba(black, 0.5)\n\ttransition box-shadow ease 0.3s\n\t\n\t&:hover\n\t\tbox-shadow 0 0 2px rgba(black, 0.5)\n\t\t\n.button--glossy\n\t// glossy-button red 'large'\n\tglossy-button(color: orange, size: 18, textColor: white)\n\thover-pop: 1.2 3deg true\n\ttransition all ease 0.2s\n\n.bubble\n\tcolor white\n\t// bubble()\n\tbubble(pos0: bottom, pos1: right, color: red, triangleSize: 15px, padding: 20px, triangleColor: blue)\n\t\ncode\n\tcode: blue\n\npre\n\tpre()\n\t\n.table-layout\n\ttl()\n\t\ntable\n\ttable()\n\t\nform \n\t.field\n\t\tfield(left)\n\t\tmax-width 100%\n\t\t\n\t\t&.error\n\t\t\tfield-error()\n\t\t&.success\n\t\t\tfield-success()\n\t\t&.warning\n\t\t\tfield-warning()\n\t\t&.disabled\n\t\t\tfield-disabled()\n\t\t\t\ninput\n\tinput()\n\nlabel\n\tlabel()\n\t&.label--block\n\t\tlabel: block\n\t\t\n\n.icons-container\n\tborder 2px orange solid\n\tborder-radius 10px\n\tbox-shadow 0px 0px 5px rgba(black, 0.5) inset\n\tgradient lighten(orange, 70%) 10%\n\t// padding 40px\n\tlost-utility clearfix\n\t\n\t.icon\n\t\ttext-align center\n\t\tpadding 20px 0\n\t\t\n\t\tlost-column 1/2\n\t\t\n\t\t+above('s')\n\t\t\tpadding 40px 0\n\t\t\tlost-column 1/3\n\t\t+above('l')\n\t\t\tlost-column 1/6","// Based on [Eric Meyer's reset](http://meyerweb.com/eric/thoughts/2007/05/01/reset-reloaded/)\n\nglobal-reset()\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td\n    reset-box-model()\n    reset-font()\n  body\n    reset-body()\n  ol, ul\n    list-style: none\n  table\n    reset-table()\n  caption, th, td\n    reset-table-cell()\n  a img\n    border: none\n\nnested-reset()\n  div, span, object, iframe, h1, h2, h3, h4, h5, h6, p,\n  pre, a, abbr, acronym, address, code, del, dfn, em, img,\n  dl, dt, dd, ol, ul, li, fieldset, form, label,\n  legend, caption, tbody, tfoot, thead, tr\n    reset-box-model()\n    reset-font()\n  table\n    reset-table()\n  caption, th, td\n    reset-table-cell()\n  a img\n    border: none\n\nreset-box-model()\n  margin: 0\n  padding: 0\n  border: 0\n  outline: 0\n\nreset-font()\n  font-weight: inherit\n  font-style: inherit\n  font-family: inherit\n  font-size: 100%\n  vertical-align: baseline\n\nreset-body()\n  line-height: 1\n  color: black\n  background: white\n\nreset-table()\n  border-collapse: separate\n  border-spacing: 0\n  vertical-align: middle\n\nreset-table-cell()\n  text-align: left\n  font-weight: normal\n  vertical-align: middle\n\nreset-html5()\n  article, aside, canvas, details, figcaption,\n  figure, footer, header, hgroup, menu, nav,\n  section, summary, main\n    reset-box-model()\n    display: block\n  audio, canvas, video\n    display inline-block\n    *display inline\n    *zoom 1\n  audio:not([controls]),[hidden]\n    display none\n","// Mixin: Print Styles\n// Nice clean print styles so you don't have to worry about it.\n\nprint-styles()\n  @media print\n    body\n      width: 100% !important\n      margin: 0 !important\n      padding: 0 !important\n      font-size: 14pt\n      line-height: 1.45\n      font-family: Garamond, \"Times New Roman\", serif\n      color: #000\n      background: none\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6\n      page-break-after: avoid\n      font-family: \"Helvetica\", Arial, sans-serif\n\n    h1\n      font-size: 36pt\n      line-height: 1.25em\n\n    h2\n      font-size: 24pt\n      line-height: 1.25em\n\n    h3\n      font-size: 18pt\n      line-height: 1.25em\n\n    h4,\n    h5,\n    h6\n      font-size: 14pt\n      line-height: 1.25em\n\n    p,\n    h2,\n    h3\n      orphans: 3\n      widows: 3\n\n    code\n      font: 12pt Courier, monospace\n\n    blockquote\n      margin: 1.2em\n      padding: 1em\n      font-size: 24pt\n      line-height: 1.45833333em\n      font-style: italic\n\n    hr\n      background-color: #ccc\n\n    img\n      float: left\n      margin: 1em 1.5em 1.5em 0\n      max-width: 100% !important\n\n    a img\n        border: none\n\n    a:link,\n    a:visited\n      background: transparent\n      font-weight: 700\n      text-decoration: underline\n      color: #333\n\n    a:link[href^=\"http://\"]:after,\n    a[href^=\"http://\"]:visited:after\n      content: \" (\" attr(href) \") \"\n      font-size: 90%\n\n    abbr[title]:after\n      content: \" (\" attr(title) \")\"\n\n    a[href^=\"http://\"]\n      color: #000\n\n    a[href$=\".jpg\"]:after,\n    a[href$=\".jpeg\"]:after,\n    a[href$=\".gif\"]:after,\n    a[href$=\".png\"]:after\n      content: \" (\" attr(href) \") \"\n      display: none\n\n    a[href^=\"#\"]:after, a[href^=\"javascript:\"]:after\n      content: \"\"\n\n    table\n      margin: 1px\n      text-align: left\n\n    th\n      border-bottom: 1px solid #333\n      font-weight: bold\n\n    td\n      border-bottom: 1px solid #333\n\n    th,\n    td\n      padding: 4px 10px 4px 0\n\n    tfoot\n      font-style: italic\n\n    caption\n      background: #fff\n      margin-bottom: 2em\n      text-align: left\n\n    thead\n      display: table-header-group\n\n    img,\n    tr\n      page-break-inside: avoid\n","// Typographic v2.9.2 - https://github.com/corysimmons/typographic\n\n\n// Settings\n\n$line-height-ratio  = 1.75\n$header-ratio       = $golden\n$body-font          = $helvetica\n$body-font-weight   = 300\n$body-color         = #666\n$header-font        = $helvetica\n$header-font-weight = 500\n$header-color       = #111\n$min-font           = 12px\n$max-font           = 20px\n$min-width          = 600px\n$max-width          = 1140px\n$vertical-rhythm    = true\n\n\n// Ratios\n\n$minor-second   = 1.067\n$major-second   = 1.125\n$minor-third    = 1.2\n$major-third    = 1.25\n$perfect-fourth = 1.333\n$aug-fourth     = 1.414\n$perfect-fifth  = 1.5\n$minor-sixth    = 1.6\n$golden         = 1.618\n$major-sixth    = 1.667\n$minor-seventh  = 1.778\n$major-seventh  = 1.875\n$octave         = 2\n$major-tenth    = 2.5\n$major-eleventh = 2.667\n$major-twelfth  = 3\n$double-octave  = 4\n\n\n// Sans-serif\n\n$calibri       = 'Calibri', 'Candara', 'Segoe', 'Segoe UI', 'Optima', 'Arial', 'sans-serif'\n$candara       = 'Candara', 'Calibri', 'Segoe', 'Segoe UI', 'Optima', 'Arial', 'sans-serif'\n$courier       = 'Courier New', 'Courier', 'Lucida Sans Typewriter', 'Lucida Typewriter', 'monospace'\n$franklin      = 'Franklin Gothic Medium', 'Arial', 'sans-serif'\n$futura        = 'Futura', 'Trebuchet MS', 'Arial', 'sans-serif'\n$geneva        = 'Geneva', 'Tahoma', 'Verdana', 'sans-serif'\n$gill-sans     = 'Gill Sans', 'Gill Sans MT', 'Calibri', 'sans-serif'\n$helvetica     = 'Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif'\n$lucida-grande = 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', 'Geneva', 'Verdana', 'sans-serif'\n$optima        = 'Optima', 'Segoe', 'Segoe UI', 'Candara', 'Calibri', 'Arial', 'sans-serif'\n$segoe         = 'Segoe', 'Segoe UI', 'Helvetica Neue', 'Arial', 'sans-serif'\n$tahoma        = 'Tahoma', 'Geneva', 'Verdana', 'sans-serif'\n$trebuchet     = 'Trebuchet MS', 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', 'Tahoma', 'sans-serif'\n$verdana       = 'Verdana', 'Geneva', 'sans-serif'\n\n\n// Serif\n\n$antiqua       = 'Book Antiqua', 'Palatino', 'Palatino Linotype', 'Palatino LT STD', 'Georgia', 'serif'\n$baskerville   = 'Baskerville', 'Baskerville old face', 'Hoefler Text', 'Garamond', 'Times New Roman', 'serif'\n$bodoni        = 'Bodoni MT', 'Didot', 'Didot LT STD', 'Hoefler Text', 'Garamond', 'Times New Roman', 'serif'\n$cambria       = 'Cambria', 'Georgia', 'serif'\n$caslon        = 'Big Caslon', 'Book Antiqua', 'Palatino Linotype', 'Georgia', 'serif'\n$constantia    = 'Constantia', 'Palatino', 'Palatino Linotype', 'Palatino LT STD', 'Georgia', 'serif'\n$didot         = 'Didot', 'Didot LT STD', 'Hoefler Text', 'Garamond', 'Times New Roman', 'serif'\n$garamond      = 'Garamond', 'Baskerville', 'Baskerville Old Face', 'Hoefler Text', 'Times New Roman', 'serif'\n$goudy         = 'Goudy Old Style', 'Garamond', 'Big Caslon', 'Times New Roman', 'serif'\n$hoefler       = 'Hoefler Text', 'Baskerville old face', 'Garamond', 'Times New Roman', 'serif'\n$lucida-bright = 'Lucida Bright', 'Georgia', 'serif'\n$palatino      = 'Palatino', 'Palatino Linotype', 'Palatino LT STD', \"Book Antiqua\", 'Georgia', 'serif'\n\n\n// Helpers\n\n/**\n * Creates a baseline grid based off your $line-height-ratio to help visualize your vertical rhythm grid. You can offset the grid by negative or positive pixels to line it up perfectly with the bottom of your text.\n *\n * @param {color} [$color=black] - A color to be lightened and used as the color for the grid.\n * @param {number} [$px-offset=false] - A positive or negative number of pixels to offset the grid by. Useful for lining the bottom of the gridlines up with your text.\n *\n * @example\n *   grid-overlay(blue, 2)\n */\n\ngrid-overlay($color = black, $px-offset = false)\n  body\n    background: linear-gradient(to top, rgba($color, 10%) 5%, white 5%)\n    background-size: 100% ($line-height-ratio)em\n    if $px-offset\n      background-position: 0 unit($px-offset, 'px')\n\n\n/**\n * Returns a \"vertical unit\". Useful for specifying the height and margins of non-text elements like images and such.\n *\n * @param {number} [$units=1] - Number of units. Accepts floated numbers as well.\n * @param {number} [$px-offset=false] - A positive or negative number of pixels to offset the grid by. Useful for lining the bottom of the gridlines up with your text. Since this doesn't compute a literal pixel you may need to use a floated number (multiples of .25 work well) to keep your rhythm on track.\n *\n * @example\n *   img\n *     vr-block(5.25, .5)\n */\n\nvr-block($units = 1, $px-offset = false)\n  if $px-offset\n    return ( (($line-height-ratio * $max-font) / ($max-font / 2)) * ($units / 2) * (1 + ($px-offset / $max-font)) )em\n  else\n    return ( (($line-height-ratio * $max-font) / ($max-font / 2)) * ($units / 2) )em\n\n\n// Typography Mixins\n\nt-html()\n  font-family: $body-font\n  font-weight: $body-font-weight\n  color: $body-color\n\n  font-size: $min-font\n  line-height: ($line-height-ratio)em\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $min-font, remove-unit($max-font), remove-unit($min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $max-font\n\nt-p = t-html\n\nt-reset()\n  margin: 0\n  padding: 0\n\nt-block()\n  margin-bottom: ($line-height-ratio)em\n\nt-header()\n  font-family: $header-font\n  font-weight: $header-font-weight\n  color: $header-color\n  clear: both\n\nt-h1()\n  $local-min-font = $min-font * ($header-ratio ** 1.75)\n  $local-max-font = $max-font * ($header-ratio ** 1.75)\n\n  font-size: $local-min-font\n  if $vertical-rhythm is true\n    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25))em\n    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5))em\n    margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25))em\n  else\n    margin-top: 0\n    line-height: 1.1em\n    margin-bottom: .25em\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $local-min-font, remove-unit($local-max-font), remove-unit($local-min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $local-max-font\n    if $vertical-rhythm is true\n      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25))em\n      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5))em\n      margin-bottom: (($line-height-ratio * $max-font) / ($local-max-font / .25))em\n\nt-h2()\n  $local-min-font = $min-font * ($header-ratio ** 1.4)\n  $local-max-font = $max-font * ($header-ratio ** 1.4)\n\n  font-size: $local-min-font\n  if $vertical-rhythm is true\n    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25))em\n    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5))em\n    margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25) * (1 + (3 / $local-min-font)))em\n  else\n    margin-top: 0\n    line-height: 1.2em\n    margin-bottom: .25em\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $local-min-font, remove-unit($local-max-font), remove-unit($local-min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $local-max-font\n    if $vertical-rhythm is true\n      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25))em\n      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5))em\n      margin-bottom: (($line-height-ratio * $max-font) / ($local-max-font / .25) * (1 + (3 / $local-max-font)))em\n\nt-h3()\n  $local-min-font = $min-font * ($header-ratio ** 1.05)\n  $local-max-font = $max-font * ($header-ratio ** 1.05)\n\n  font-size: $local-min-font\n  if $vertical-rhythm is true\n    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25))em\n    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5))em\n    margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25) * (1 + (3 / $local-min-font)))em\n  else\n    margin-top: 0\n    line-height: 1.3em\n    margin-bottom: .25em\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $local-min-font, remove-unit($local-max-font), remove-unit($local-min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $local-max-font\n    if $vertical-rhythm is true\n      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25))em\n      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5))em\n      margin-bottom: (($line-height-ratio * $max-font) / ($local-max-font / .25) * (1 + (3 / $local-max-font)))em\n\nt-h4()\n  $local-min-font = $min-font * ($header-ratio ** .7)\n  $local-max-font = $max-font * ($header-ratio ** .7)\n\n  font-size: $local-min-font\n  if $vertical-rhythm is true\n    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25))em\n    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5))em\n    margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25) * (1 + (3 / $local-min-font)))em\n  else\n    margin-top: 0\n    line-height: 1.4em\n    margin-bottom: .25em\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $local-min-font, remove-unit($local-max-font), remove-unit($local-min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $local-max-font\n    if $vertical-rhythm is true\n      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25))em\n      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5))em\n      margin-bottom: (($line-height-ratio * $max-font) / ($local-max-font / .25) * (1 + (3 / $local-max-font)))em\n\nt-h5()\n  $local-min-font = $min-font * ($header-ratio ** .35)\n  $local-max-font = $max-font * ($header-ratio ** .35)\n\n  font-size: $local-min-font\n  if $vertical-rhythm is true\n    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25))em\n    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5))em\n    margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25))em\n  else\n    margin-top: 0\n    line-height: 1.5em\n    margin-bottom: .25em\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $local-min-font, remove-unit($local-max-font), remove-unit($local-min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $local-max-font\n    if $vertical-rhythm is true\n      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25))em\n      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5))em\n      margin-bottom: (($line-height-ratio * $max-font) / ($local-max-font / .25))em\n\nt-h6()\n  $local-min-font = $min-font\n  $local-max-font = $max-font\n\n  font-size: $local-min-font\n  if $vertical-rhythm is true\n    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25))em\n    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5))em\n    margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25) * (1 + (5 / $local-min-font)))em\n  else\n    margin-top: 0\n    line-height: 1.6em\n    margin-bottom: .25em\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $local-min-font, remove-unit($local-max-font), remove-unit($local-min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $local-max-font\n    if $vertical-rhythm is true\n      margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25))em\n      line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5))em\n      margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25) * (1 + (1 / $local-min-font)))em\n\nt-blockquote()\n  font-style: italic\n  cite\n    display: block\n    font-style: normal\n\nt-pre()\n  padding: vr-block(.5)\n  margin-bottom: vr-block(1)\n  code\n    padding: 0\n\nt-code()\n  font-family: $courier\n  padding: ($line-height-ratio * .05)em ($line-height-ratio * .15)em\n  line-height: 0\n\nt-abbr()\n  border-bottom: 1px dotted currentColor\n  cursor: help\n\nt-dt()\n  color: $header-color\n  font-weight: bold\n\nt-fieldset()\n  padding: vr-block(.5) vr-block() vr-block()\n  border-width: 1px\n  border-style: solid\n  max-width: 100%\n  margin-bottom: vr-block(1, 1)\n\n  @media (min-width: $max-width)\n    margin-bottom: vr-block(1.25, -1)\n\n  button, input[type=\"submit\"]\n    margin-bottom: 0\n\nt-legend()\n  color: $header-color\n  font-weight: bold\n\nt-label()\n  display: block\n  padding-bottom: vr-block(.125)\n  margin-bottom: vr-block(-.25, -10)\n\nt-input()\n  $local-min-font = $min-font\n  $local-max-font = $max-font\n\n  display: block\n  max-width: 100%\n  padding: vr-block(.25)\n\n  font-size: $local-min-font\n  margin-bottom: vr-block(.5, 7)\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $local-min-font, remove-unit($local-max-font), remove-unit($local-min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $local-max-font\n    margin-bottom: vr-block(.25, 3.5)\n\nt-button()\n  $local-min-font = $min-font\n  $local-max-font = $max-font\n\n  display: block\n  cursor: pointer\n\n  font-size: $local-min-font\n  padding: vr-block(.25) vr-block()\n  margin-bottom: vr-block(.75, -2)\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $local-min-font, remove-unit($local-max-font), remove-unit($local-min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $local-max-font\n    margin-bottom: vr-block(.75)\n\nt-table()\n  width: 100%\n  border-spacing: 0\n  border-collapse: collapse\n  margin-bottom: vr-block(1, 5)\n\n  @media (min-width: $max-width)\n    margin-bottom: vr-block(1, 3.5)\n\nt-th()\n  text-align: left\n  color: $header-color\n\n  padding: vr-block(.125) vr-block(.5)\n\n  @media (min-width: $max-width)\n    padding: vr-block(.25) vr-block(.5)\n\nt-td()\n  padding: vr-block(.125) vr-block(.5)\n\n  @media (min-width: $max-width)\n    padding: vr-block(.25) vr-block(.5)\n\n/**\n * The Typographic Reset. This is where Typographic goes through every markup element and styles it to adhere to a vertical rhythm. After you set your variables in a settings file fire this mixin.\n *\n * @example\n *   typographic()\n */\n\ntypographic()\n\n  html\n    t-html()\n\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td\n    t-reset()\n\n  p, blockquote, pre,\n  address,\n  dl, ol, ul,\n  table\n    t-block()\n\n  h1, h2, h3, h4, h5, h6\n    t-header()\n\n  h1\n    t-h1()\n\n  h2\n    t-h2()\n\n  h3\n    t-h3()\n\n  h4\n    t-h4()\n\n  h5\n    t-h5()\n\n  h6\n    t-h6()\n\n  blockquote\n    t-blockquote()\n\n  pre\n    t-pre()\n\n  code\n    t-code()\n\n  big, small, sub, sup\n    line-height: 0\n\n  abbr, acronym\n    t-abbr()\n\n  address\n    font-style: normal\n\n  dt\n    t-dt()\n\n  ul\n    padding-left: 1.1em\n\n  ol\n    padding-left: 1.4em\n\n  fieldset\n    t-fieldset()\n\n  legend\n    t-legend()\n\n  label\n    t-label()\n\n  input[type=\"text\"], input[type=\"email\"], input[type=\"password\"], textarea\n    t-input()\n\n  input[type=\"submit\"], button\n    t-button()\n\n  table\n    t-table()\n\n  th\n    t-th()\n\n  td\n    t-td()\n","base-font-size ?= 16px\nrasterise-media-queries ?= false\n\nrupture = {\n  rasterise-media-queries: rasterise-media-queries\n  mobile-cutoff: 400px\n  desktop-cutoff: 1050px\n  hd-cutoff: 1800px\n  enable-em-breakpoints: false\n  base-font-size: base-font-size\n  anti-overlap: false\n  density-queries: 'dppx' 'webkit' 'moz' 'dpi'\n  retina-density: 1.5\n  use-device-width: false\n}\nrupture.scale = 0 (rupture.mobile-cutoff) 600px 800px (rupture.desktop-cutoff) (rupture.hd-cutoff)\nrupture.scale-names = 'xs' 's' 'm' 'l' 'xl' 'hd'\n\n-is-string(val)\n  if typeof(val) is not 'unit'\n    if val is a 'string' or val is a 'ident'\n      true\n    else\n      false\n  else\n    false\n\n-get-scale-number(scale-name)\n  for list-item, i in rupture.scale-names\n    if list-item is scale-name\n      return i + 1\n  return false\n\n-convert-to(to-unit, value, context = rupture.base-font-size)\n  from-unit = unit(value)\n  return value if to-unit is from-unit\n  if to-unit in ('em' 'rem')\n    return value if from-unit in ('em' 'rem')\n    return unit((value / context), to-unit)\n  if to-unit is 'px'\n    return unit((value * context), 'px')\n\n-on-scale(n)\n  return unit(n) is ''\n\n-larger-than-scale(n)\n  return (n > (length(rupture.scale) - 1)) and -on-scale(n)\n\n-is-zero(n)\n  return n is 0\n\n-overlap-shift(anti-overlap, n)\n  shift-unit = unit(n)\n  anti-overlap = 0px unless anti-overlap\n  anti-overlap = 1px if anti-overlap is true\n  if length(anti-overlap) is 1\n    return -convert-to(shift-unit, anti-overlap)\n  for val in anti-overlap\n    return val if unit(val) is shift-unit\n\n-adjust-overlap(anti-overlap, n, side = 'min')\n  -shift = -overlap-shift(anti-overlap, n)\n  if (side is 'min' and -shift > 0) or (side is 'max' and -shift < 0)\n    n = n + -shift\n  return n\n\n-is-positive(n)\n  return n >= 0\n\n-density-queries(density)\n  if typeof(density) is not 'unit'\n    if not -is-string(density)\n      density = '%s' % density\n  density = rupture.retina-density if density is 'retina'\n  queries = ()\n  for query in rupture.density-queries\n    if query is 'webkit'\n      push(queries, '(-webkit-min-device-pixel-ratio: %s)' % (density))\n    else if query is 'moz'\n      push(queries, '(min--moz-device-pixel-ratio: %s)' % (density))\n    else if query is 'o'\n      push(queries, '(-o-min-device-pixel-ratio: %s/1)' % (density))\n    else if query is 'ratio'\n      push(queries, '(min-device-pixel-ratio: %s)' % (density))\n    else if query is 'dpi'\n      if -is-string(density)\n        density=convert(density)\n      push(queries, '(min-resolution: %sdpi)' % (round(density * 96, 1)))\n    else if query is 'dppx'\n      push(queries, '(min-resolution: %sdppx)' % (density))\n  return queries\n\ncreate-fallback-class(selected, class)\n  /{'' + class + ' ' + selected}\n    {block}\n\n// +between(min, max)\n// usage (scale can be mixed with custom values):\n//   - +between(1, 3) scale:scale\n//   - +between(0, 3) 0 width:scale\n//   - +between(200px, 500px) custom:custom\n//   - +between(0, 300px) 0 width:custom\n//   - +between(1, 300px) scale:custom\n//   - +between(200px, 4) custom:scale\n\nbetween(min, max, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  selected = selector()\n\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  if -is-string(min)\n    min = -get-scale-number(min)\n  if -is-string(max)\n    max = -get-scale-number(max)\n\n  -min = rupture.scale[min - 1] unless -is-zero(min) or (not -on-scale(min))\n  -max = rupture.scale[max] unless not -on-scale(max)\n  -min ?= min\n  -max ?= max\n\n  if (rupture.rasterise-media-queries)\n    if not (density or -max or orientation)\n      {block}\n  else\n    condition = 'only screen'\n    use-device-width = use-device-width ? 'device-' : ''\n    unless -min is 0\n      -min = -convert-to('em', -min) if rupture.enable-em-breakpoints\n      -min = -adjust-overlap(anti-overlap, -min, side: 'min')\n      condition = condition + ' and (min-' + use-device-width + 'width: %s)' % (-min)\n    unless -larger-than-scale(max)\n      -max = -convert-to('em', -max) if rupture.enable-em-breakpoints\n      -max = -adjust-overlap(anti-overlap, -max, side: 'max')\n      condition = condition + ' and (max-' + use-device-width + 'width: %s)' % (-max)\n    if orientation\n      condition = condition + ' and (orientation: %s)' % (orientation)\n    if density\n      conditions = ()\n      for query in -density-queries(density)\n        push(conditions, condition + ' and %s' % (query))\n      condition = join(', ', conditions)\n    @media condition\n      {block}\n  if fallback-class\n    +create-fallback-class(selected, fallback-class)\n      {block}\n\nat(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nfrom-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, length(rupture.scale), anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nabove = from-width\n\nto-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(1, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nbelow = to-width\n\nmobile(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +below(rupture.mobile-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ntablet(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(rupture.mobile-cutoff, rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndesktop(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nhd(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.hd-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndensity(density, orientation = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    conditions = ()\n    for query in -density-queries(density)\n      condition = 'only screen and %s' % (query)\n      if orientation\n        condition = condition + ' and (orientation: %s)' % (orientation)\n      push(conditions, condition)\n    condition = join(', ', conditions)\n    @media condition\n      {block}\n    if fallback-class\n      +create-fallback-class(selected, fallback-class)\n        {block}\n\npixel-ratio = density\n\nretina(orientation = null, fallback-class = null)\n  +density('retina', orientation, fallback-class)\n    {block}\n\nlandscape(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: landscape, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: landscape)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n\nportrait(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: portrait, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: portrait)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n","/*\n * Size utility.\n *\n * Synopsis:\n *\n *   size: <width> <height> | <width & height>\n *\n * Examples:\n *\n *     size: 100% 30px\n *       yields:\n *         width: 100%\n *         height: 30px\n *\n *     size: 5px\n *       yields:\n *         width: 5px\n *         height: 5px\n *\n */\n\nsize()\n  if length(arguments) == 1\n    width: arguments[0]\n    height: arguments[0]\n  else\n    width: arguments[0]\n    height: arguments[1]\n","// -------\n// Buttons\n// -------\n\n// Function: highlight\n//\n// Adds a light brighter line across the top of the element for a perspective\n// effect. Takes an optional argument for strength, which takes a value between\n// 0 and 1.\n//\n// ex. highlight()\n// ex. highlight: .7\n\n-highlight(strength = .3)\n  box-shadow(s(\"inset 0 1px 0 %s\", rgba(255,255,255,strength)))\n\n// Function: parse\n// Used internally for setting button sizes.\n\n-parse(size)\n  if size == \"small\"\n    return 10\n  else if size == \"medium\"\n    return 13\n  else if size == \"large\"\n    return 18\n  else\n    return size\n\n// Mixin: Button\n//\n// Creates a very basic looking button style. Three optional params:\n// - color: Takes any color, defaults to the default global color\n// - size: Takes 'small', 'medium', 'large', or an integer. The numbers reflect\n//   the font size for the text inside the button, but scales all other aspects\n//   as well (corners, padding, etc).\n// - textColor: Takes any color for the button text, defaults to trying to\n//   detect whether the background is dark or light and setting the opposite.\n//\n// ex. button()\n// ex. button: blue\n// ex. button: #D4513B\n// ex. button: green large\n// ex. button: #4C82D4 24\n\nbutton(color = default-color, size = \"medium\", textColor = null)\n\n  // color detection and changes\n  textColor = (light(color) ? #494949 : #fff) unless textColor\n  parsed_size = -parse(size)\n\n  // now that we've got numbers, let's work some proportions\n  height = round((parsed_size * 1.53px) / 2)\n  width = round(((parsed_size * 1.53px) * 2.2) / 2)\n\n  // dynamically calculated styles\n  font-size: unit(parsed_size, 'px')\n  padding: unit(height, 'px') unit(width, 'px')\n  border-radius: round(parsed_size / 4.33333px)\n  background-color: color\n  color: textColor\n\n  // constant styles\n  cursor: pointer\n  font-weight: bold\n  font-family: font-stack\n  line-height: 1em\n  text-align: center\n  text-decoration: none\n  display: inline-block\n  border none\n  &:hover, &:focus\n    background-color: darken(color, 5%)\n    color: darken(textColor, 3%)\n    border: none\n\n  &:active\n    background-color: darken(color, 10%)\n\n// Mixin: Glossy Button\n//\n// Creates a more fancy looking button style. Five optional params:\n// - color: Takes any color, defaults to the default global color\n// - size: Takes 'small', 'medium', 'large', or an integer. The numbers reflects\n//   the font size for the text inside the button, but scales all other aspects\n//   as well.\n// - textColor: Takes any color for the button text, defaults to trying to\n//   detect whether the background is dark or light and setting the opposite.\n// - shadowColor: Color for the text shadow, default is the contrast detection\n//   described above.\n// - hoverColor: Color of the text shadow when hovered. Default is contrast\n//   detection as described above. You probably don't need to use this.\n//\n// ex. glossy-button()\n// ex. glossy-button: blue\n// ex. glossy-button: #D4513B\n// ex. glossy-button: green large\n// ex. glossy-button: #4C82D4 24\n\nglossy-button(color = default-color, size = \"medium\", textColor = null, shadowColor = null, hoverColor = null)\n\n  // color detection and changes\n  if textColor\n    darkText = light(textColor) ? true : false\n  else\n    darkText = light(color) ? false : true\n    textColor = darkText ? white : #494949\n\n  shadowColor = darkText ? rgba(#000,.1) : rgba(#fff,.3) unless shadowColor\n  hoverColor = darkText ? rgba(#000,.2) : rgba(#fff,.5) unless hoverColor\n  downShadow = darkText ? 0 -1px 1px rgba(#000,.2) : 1px 1px 1px rgba(#fff,.6)\n\n  // parse words, make sure it's a number\n  parsed_size = -parse(size)\n\n  // now that we've got numbers, let's work some proportions\n  height = round((parsed_size*1.53px)/2)\n  width = round(((parsed_size*1.53px)*2.2)/2)\n\n  // dynamically calculated styles\n  font-size: unit(parsed_size, 'px')\n  padding: unit(height, 'px') unit(width, 'px')\n  border-radius: round(parsed_size/4.33333px)\n  gradient: color\n  text-shadow: 1px 1px 1px shadowColor\n  border: s('1px solid %s', darken(color, 10%))\n  color: textColor\n\n  // constant styles\n  -highlight()\n  cursor: pointer\n  font-weight: bold\n  font-family: font-stack\n  line-height: 1em\n  text-align: center\n  text-decoration: none\n  display: inline-block\n\n  &:hover, &:focus\n    background-position: 0 unit(height * -1, 'px')\n    color: darken(textColor, 3%)\n    text-shadow: 1px 1px 1px hoverColor\n\n  &:active\n    box-shadow(s(\"inset 0 1px %s %s\", parsed_size/2.6px, rgba(darken(color, 25%),.6)))\n    text-shadow: downShadow\n    border-color: darken(color, 18%)\n\n// Mixin: Button Disabled\n//\n// Add this mixin to a button and it will make the button appear to be disabled.\n// Try attaching to a class like .disabled and adding that class to the button.\n// Takes no arguments.\n//\n// ex. .disabled\n//       button-disabled()\n\nbutton-disabled()\n  background: #ccc\n  border-color: darken(#ccc, 10%)\n  opacity: .5\n  cursor: default\n  no-select()\n\n  &:hover\n    background: #ccc\n    background-position: 0 0\n\n  &:active\n    background: #ccc\n    box-shadow: none\n    border-color: darken(#ccc, 10%)\n    text-shadow: 1px 1px 1px rgba(#000,.1)\n\n// Additive Mixin: Buttons\n//\n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n//\n// This mixin makes it such that you can use classes to define buttons on your\n// page.\n// - .btn: creates a simple button\n// - .btn-fancy: creates a fancy button\n// - .disabled: disables an existing button (will only work on .btn and\n//   .btn-simple)\n\nbuttons()\n  .btn\n    transition()\n    button()\n  .btn-fancy\n    transition()\n    glossy-button()\n  .btn.disabled, .btn-simple.disabled\n    button-disabled()\n","// ------\n// Vendor\n// ------\n\n// Utilities specifically intended for helping with vendor-prefixed\n// css properties\n\n// Alias: Transition\n//\n// Transition with an intelligent default.\n//\n// ex. transition()\n// ex. transition: color 1s ease\n// ex. transition(color 1s ease, background 2.4s linear)\n\n//Cache nib transition mixin.\n_transition = transition\n\ntransition()\n  arguments = unquote('all .3s ease') unless arguments\n  _transition: arguments\n\n\n// Alias: Box Shadow\n//\n// Box shadow with pie support, if you are using it.\n//\n// ex. box-shadow: 1px 1px 3px blue\n// ex. box-shadow(1px 1px 3px blue, inset 2px 0 5px rgba(0,0,0,.5))\n\nbox-shadow()\n  box-shadow: arguments\n  pie()\n\n// Alias: Border Radius\n//\n// Border-radius with pie support, if you are using it.\n//\n// ex. +round-corners(5px)\n\nborder-radius()\n  border-radius: arguments\n  pie()\n\n// Alias: Opacity\n//\n// I know, it seems silly. But every time you go to old IE testing you will be\n// thanking yourself for using this instead of the normal opacity declaration.\n// Overrides default opacity.\n//\n// ex. opacity: .6\n\nopacity(opacity, args...)\n  \n  if args  \n    filter: s(\"progid:DXImageTransform.Microsoft.Alpha(Opacity=%s)\", opacity * 100 args) if support-for-ie  \n  else\n    filter: s(\"progid:DXImageTransform.Microsoft.Alpha(Opacity=%s)\", opacity * 100) if support-for-ie  \n    \n  opacity: opacity args\n\n// Alias: Border Box\n// A quicker way to specify border-box sizing.\n\nborder-box()\n  box-sizing: border-box\n\n// Alises: background-appearance-x and y\n//\n// In case you want to use an unsupported background-position property, this\n// should set you straight!\n\nbackground-position-x(x)\n  background-position: x 0\n\nbackground-position-y(y)\n  background-position: 0 y\n\n// Mixin: Opentype ligatures\n//\n// The vast majority of fonts contain lowercase and uppercase alphabets,\n// numerals, punctuation and accents. // Many professionally-designed fonts\n// also contain ligatures, alternative characters, smallcaps, different kinds of\n// numbers, and sometimes much more besides. This enables it.\n//\n// Source: http://www.newnet-soft.com/blog/csstypography\n// Additional: http://blog.fontdeck.com/post/15777165734/opentype-1\n\nopenTypeLigatures()\n  -moz-font-feature-settings:    \"liga=1, dlig=1\"\n  -ms-font-feature-settings:     \"liga\", \"dlig\"\n  -webkit-font-feature-settings: \"liga\", \"dlig\"\n  -o-font-feature-settings:      \"liga\", \"dlig\"\n  font-feature-settings:         \"liga\", \"dlig\"\n","// -----------\n// Interaction\n// -----------\n\n// These mixins trigger on some sort of interaction with an element, like a\n// hover or a click.\n\n// Mixin: Hover Darken\n// \n// Darkens the color and/or background color on your element when it's hovered.\n// Takes an optional percentage to darken it.\n// \n// ex. hover-darken()\n// ex. hover-darken: 30%\n\nhover-darken(percent = 15%, forceUseColor = false)\n  &:hover\n    if @background and !forceUseColor\n      background-color: darken(@background, percent)\n    else if @background-color and !forceUseColor\n      background-color: darken(@background-color, percent)\n    else if @color\n      color: darken(@color, percent)\n    else\n      warn('you need to set a color or background color on your element for this to work')\n\n// Mixin: Hover Lighten\n// \n// Works the same way as hover-darken but lightens the color.\n// \n// ex. hover-lighten()\n// ex. hover-lighten: 30%\n\nhover-lighten(percent = 15%, forceUseColor = false)\n  &:hover\n    if @background and !forceUseColor\n      background-color: lighten(@background, percent)\n    else if @background-color and !forceUseColor\n      background-color: lighten(@background-color, percent)\n    else if @color\n      color: lighten(@color, percent)\n    else\n      warn('you need to set a color or background color on your element for this to work')\n\n// Mixin: Hover Underline\n// \n// This one is interesting, and may need tweaking to get it to work right on the\n// intended element. Works very nicely for text like in a span, and can animate.\n// \n// ex. hover-underline()\n// ex. hover-underline: 2px 'dotted'\n\nhover-underline(borderSize = 1px, type = 'solid', color = null)\n  border-bottom: borderSize unquote(type) transparent\n  \n  &:hover\n    border-bottom: borderSize unquote(type) color\n\n// Mixin: Hover Pop\n// \n// On hover, your element pops out from the page. For scale, it takes an integer\n// or float, 1 represents 100%, 2 is 200%, etc. Optionally can also rotate,\n// pass it a number followed by \"deg\", like 180deg. If you pass true for\n// shadow, it will animate in a drop shadow to add to the effect.\n// \n// ex. hover-pop: 1.5\n// ex. hover-pop: 2.6 90deg\n// ex. hover-pop: 1.2 45deg true\n\nhover-pop(scale = 1.2, rotate = null, shadow = null)\n  if shadow\n    box-shadow: 0 0 1px transparent\n    \n  &:hover\n    position: relative\n    z-index: 10\n    transform: scale(scale)\n    if shadow\n      box-shadow: 0 0 5px rgba(#000, .3)\n    if rotate\n      transform: scale(scale) rotate(rotate)\n\n// Mixin: Hover Fade\n// \n// On hover, fades the element's opacity down. Takes an amount as an integer\n// between 0 and 1, like opacity normally does. Recommended to be used with\n// transition.\n\n// ex. hover-fade: .5\n\nhover-fade(amount = .5)\n  &:hover\n    opacity: amount\n\n// Mixin: Hover Color\n// \n// Will swap an elements color or background color on hover. Takes a color in\n// any format as the first argument. Will first look for a background color to\n// change, then a color.\n// \n// ex. hover-color: #D45D86\n\nhover-color(color, forceUseColor = false)\n  &:hover\n    if @background and !forceUseColor\n      background-color: color\n    else if @background-color and !forceUseColor\n      background-color: color\n    else if @background-color and !force-use-color\n      background-color: color\n    else if @color\n      color: color\n    else\n      warn('you need to set a color or background color on your element for this to work')\n\n// TODO:\n// *+click-down(pixels)*\n// *+click-shadow(radius)*\n// *+button-interaction(color)*\n","// --\n// UI\n// --\n\n// Mixin: Area\n//\n// Just a nice little area for you to put content in. Rounded corners, box with\n// light grey background by default. You can pass it a different color if you'd\n// like.\n//\n// ex. area()\n// ex. area: red // <-- not recommended\n\narea(color=#F5F5F5)\n  box-shadow(inset 0 0 6px rgba(#000,.05))\n  background-color: color\n  padding: 15px\n  border-radius: 4px\n  margin: 20px 0\n  pie()\n\n// Mixin: Notice\n//\n// A notice for you. Best used for flash alerts, this was originally an internal\n// mixin, but you can use it if you'd like. Give it a color and a width and it\n// will output a nice lightly gradiented box for your notice to reside in.\n//\n// ex. notice()\n// ex. notice: 500px blue\n\nnotice(width=false, color=#EEEEEE, padding=10px)\n  group()\n  gradient: color 3%\n  border-radius: 5px\n  padding: padding\n  border: 1px solid darken(color, 10%)\n  box-shadow: 1px 1px 3px rgba(#000,.05)\n  position: relative\n  width: width if width\n\n// Mixin: Flash\n//\n// This is really great for rails flash messages, or really any little\n// notifications like 'logged in!', 'logged out!', or 'errarrrr!'. Takes one of\n// four types and colors them nicely for you - notice, success, warning, or\n// error. Defaults to notice.\n//\n// ex. flash()\n// ex. flash: 'error'\n\nflash(type='notice')\n  if type == 'notice'\n    notice(color: #6CC5FA)\n    color: #fff\n    font-weight: bold\n    text-shadow: 1px 1px 1px rgba(#000,.2)\n  if type == 'success'\n    notice(color: #7BDEA3)\n    color: #fff\n    font-weight: bold\n    text-shadow: 1px 1px 1px rgba(#000,.2)\n  if type == 'warning'\n    notice(color: #FAE677)\n    font-weight: bold\n    text-shadow: 1px 1px 1px rgba(#fff,.2)\n  if type == 'error'\n    notice(color: #E77C70)\n    color: #fff\n    font-weight: bold\n    text-shadow: 1px 1px 1px rgba(#000,.2)\n\n// Mixin: Breadcrumb\n//\n// Lay this one down on a list and it will turn the list into a breadcrumb-y\n// thing. By default separates with a slash, but you can feed it any character.\n// Second param is spacing between the list items, and the third is the color of\n// the divider. All are optional.\n//\n// ex. breadcrumb()\n// ex. breadcrumb: '>'\n// ex. breadcrumb: \"-\" 25px red\n// ex. breadcrumb \"~\" 40px\n\nbreadcrumb(character=\"/\", spacing=10px, dividerColor=#CDCDCD)\n  inline-list: spacing\n\n  li:after\n    content: character\n    margin-left: spacing\n    color: dividerColor\n\n  li:last-child:after\n    content: \"\"\n\n// Mixin: Bubble\n//\n// If you're anything like me, you always seem to find your designers putting\n// little bubbles in things. This mixin takes care of that problem, and makes a\n// nice bubble with 100% css. All parameters optional - accepts width, pointer\n// position (left, center, or right), and a color.\n//\n// ex. bubble()\n// ex. bubble: top center #57777E\n// ex. bubble: bottom right #5740A1 500px\n// ex. bubble: right top #5740A1 500px\n\nbubble(pos0=left, pos1=false, color=#EEEEEE, width=false, triangleSize=10px, sideDistance=15px, padding=10px, pointer=false, triangleColor=darken(color, 3%), triangleBorderColor=darken(triangleColor, 10%))\n\n  // use named argument 'pointer' as pos0 arg (to preserve old bubble api)\n  borderWidth = 1px\n  sqrt2 = 1.3\n  distanceYShadow = (sideDistance - borderWidth)\n  distanceXShadow = (sideDistance - borderWidth)\n  marginLeftShadow = auto\n  marginLeft= auto\n  marginTopShadow = auto\n  marginTop = auto\n  if pointer\n    pos1 = pointer\n    pos0 = bottom\n  // if no pos1 is given, shift args and assume 'bottom pos0'\n  if pos1 is false\n    pos1 = pos0\n    pos0 = bottom\n  else if pos1 is a 'color'\n    width = color\n    color = pos1\n    pos1 = pos0\n    pos0 = bottom\n\n  notice: width color padding\n\n  if pos0 is top\n    directionTriangle = up\n    positionY = top\n    distanceY = -(triangleSize)\n    distanceYShadow = -(triangleSize + borderWidth * sqrt2)\n  else if pos0 is bottom\n    directionTriangle = down\n    positionY = bottom\n    distanceY = -(triangleSize)\n    distanceYShadow = -(triangleSize + borderWidth * sqrt2)\n  else if pos0 is left\n    directionTriangle = left\n    positionX = left\n    distanceX = -(triangleSize)\n    distanceXShadow = -(triangleSize + borderWidth * sqrt2)\n  else if pos0 right\n    directionTriangle = right\n    positionX = right\n    distanceX = -(triangleSize)\n    distanceXShadow = -(triangleSize + borderWidth * sqrt2)\n\n  if pos1 is left\n    positionX = left\n    distanceX = sideDistance\n  else if pos1 is right\n    positionX = right\n    distanceX = sideDistance\n  else if pos1 is bottom\n    positionY = bottom\n    distanceY = sideDistance\n  else if pos1 is top\n    positionY = top\n    distanceY = sideDistance\n  else if pos1 is center\n    if pos0 is top or pos0 is bottom or pos1 is false\n      marginLeft = -(triangleSize)\n      marginLeftShadow = -(triangleSize + borderWidth * sqrt2 / 2)\n      positionX = left\n      distanceX = 50%\n      distanceXShadow = 50%\n    else\n      marginTop = -(triangleSize/2)\n      marginTopShadow = -(triangleSize/2 + borderWidth * sqrt2 / 2)\n      positionY = top\n      distanceY = 50%\n      distanceYShadow = 50%\n\n  &:before\n    margin-top: marginTopShadow\n    margin-left: marginLeftShadow\n    triangle: directionTriangle (triangleSize + borderWidth * sqrt2) triangleBorderColor\n    absolute: positionY distanceYShadow positionX distanceXShadow\n    display: block\n  &:after\n    margin-top: marginTop\n    margin-left: marginLeft\n    triangle: directionTriangle triangleSize triangleColor\n    absolute: positionY distanceY positionX distanceX\n    display: block\n\n// Mixin: Figure\n//\n// For when you want to *semantically* show an image. Put this on your\n// <figure /> element and it will style the nested image and figcaption in a\n// wonderfully pleasing manner. Takes a color (for the thin outline), and if\n// you want, dimensions of the image as a space separated list.\n//\n// ex. figure()\n// ex. figure: blue\n// ex. figure(green, 100px 400px)\n\nfigure(color = default-color, dimensions = false)\n\n  if length(dimensions) > 1\n    display: block\n    size: dimensions[0] dimensions[1]\n  else if dimensions == false\n    inline-block()\n  else\n    warn(\"Make sure you pass the image's dimensions as a space-separated list\")\n\n  img\n    display: block\n    padding: 4px\n    border-radius: 3px\n    border: 1px solid rgba(color, .6)\n\n  figcaption\n    padding: 10px 0\n    text-align: center\n    italic()\n\n// Mixin: Navigation\n//\n// Makes a fantastic nav bar for you that doesn't look exactly like bootstrap's\n// and you can customize it as well. Params: fixed (boolean), color (recommend\n// something dark), link color, and size, which is an integer from one up, and\n// scales every aspect of the nav bar for you. All have defaults. This mixin is\n// meant to be placed on a <nav> element that contains a ul.\n//\n// ex. nav()\n// ex. nav: 1 #444 red true\n\nnavigation(size = 1, bgColor = #222, linkColor = #fff, posFixed = false)\n  group()\n  display: block\n  z-index: 10\n  gradient: bgColor 5%\n  box-shadow: 0 3px 3px rgba(0,0,0,.15)\n  border-bottom: 1px solid rgba(darken(bgColor, 15%),.7)\n  height: (size + 14) * 2.866px\n  width: 100%\n  font-size: unit(size + 14, 'px')\n\n  if posFixed\n    position: fixed\n  else\n    position: relative\n\n  h1\n    float: left\n    padding: (size + 14) * .58px\n    padding-left: 17px\n    color: linkColor\n    bold()\n    font-size: (size + 14) * 1.3px\n\n  ul\n    float: right\n    margin: 0\n    padding: (size + 14) * .8px\n    color: linkColor\n\n    li\n      list-style-type: none\n      margin-right: 30px\n      float: left\n\n      a\n        color: linkColor\n        border: none\n        cursor: pointer\n\n        &:hover\n          color: darken(linkColor, 20%)\n          border: none\n\n// Alias: nav\nnav = navigation\n\n// Additive Mixin: Flash Notices\n//\n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n//\n// Super convenient flash notices. Anything with .flash on it will display as a\n// notice, and if you add the additional class .error, .warning, .notice, or\n// .success, it will display the appropriate color background for the message.\n//\n// ex. flash-notices()\n\nflash-notices()\n  .flash\n    &.error\n      flash(error)\n    &.warning\n      flash(warning)\n    &.notice\n      flash(notice)\n    &.success\n      flash(success)\n\n// Mixin: Radio\n//\n// A simple reset for radio button styling across browsers. Takes a color.\n// Default color is blue. Use on the <label> which wraps your radio inputs.\n//\n// ex. radio()\n// ex. radio: gray\n// ex. radio(#FF1493)\n\nradio(color=#0074d9)\n  cursor: pointer\n  display: block\n  line-height: 2.5em\n\n  // Accessible hidden styles\n  [type=\"radio\"]\n    border: 0\n    clip: rect(0 0 0 0)\n    height: 1px\n    margin: -1px\n    overflow: hidden\n    padding: 0\n    position: absolute\n    width: 1px\n\n    & + span\n      display: block\n\n    // Unchecked\n    & + span:before\n      background: rgba(#000,.15)\n      border: 0.125em solid #fff\n      border-radius: 1em\n      box-shadow: 0 0 0 .1em rgba(#000, .25)\n      content: ''\n      display: inline-block\n      height: 1em\n      margin-right: 0.75em\n      transition: 0.5s ease all\n      vertical-align: -0.33em\n      width: 1em\n\n    // Checked\n    &:checked + span:before, &:focus + span:before\n      background: color\n      box-shadow: 0 0 0 0.25em rgba(#000, .15)\n\n// Mixin: Range\n//\n// A clean, cross-browser styling reset for range inputs.\n// Note: range inputs are not supported in IE9 and below.\n// http://caniuse.com/#feat=input-range\n//\n// ex. range()\n// ex. range: tomato 200px 15px 9px #333\n\nrange(color=#0074d9, trackWidth=100%, thumbSize=2em, trackHeight=.5em, trackColor=rgba(#000, .1))\n  -webkit-appearance: none\n  width: trackWidth\n  margin: 0\n  outline: none\n  background: transparent\n\n  &::-webkit-slider-runnable-track\n    background: trackColor\n    border: none\n    border-radius: trackHeight\n    height: trackHeight\n    width: trackWidth\n\n  &::-webkit-slider-thumb\n    -webkit-appearance: none\n    border: none\n    height: thumbSize\n    width: thumbSize\n    border-radius: 50%\n    background: color\n    margin-top: \"calc(-%s / 2 + %s / 2)\" % (thumbSize trackHeight)\n    transition: all 0.2s ease\n\n    &:hover\n      transform: scale(1.2)\n      cursor: pointer\n\n    &:active\n      background: darken(color, 15%)\n\n  &:focus\n    outline: none\n\n  &:focus::-webkit-slider-runnable-track\n    background: trackColor\n\n  &::-moz-range-track\n    width: trackWidth\n    height: trackHeight\n    background: trackColor\n    border: none\n    border-radius: trackHeight\n\n  &::-moz-range-thumb\n    border: none\n    height: thumbSize\n    width: thumbSize\n    border-radius: 50%\n    background: color\n    transition: all 0.2s ease\n\n    &:hover\n      transform: scale(1.2)\n\n    &:active\n      background: darken(color, 15%)\n\n  &::-moz-focus-outer\n    border: 0\n\n  &::-ms-track\n    height: trackHeight\n    width: trackWidth\n    background: transparent\n    border-width: \"calc(%s / 2 + %s / 2)\" % (thumbSize trackHeight) 0\n    color: transparent;\n\n  &::-ms-fill-lower, &::-ms-fill-upper, &:focus::-ms-fill-lower, &:focus::-ms-fill-upper\n    background: trackColor\n    border-radius: 10px\n\n  &::-ms-thumb\n    border: none\n    height: 2em\n    width: 2em\n    border-radius: 50%\n    background: color\n\n    &:active\n      background: darken(color, 15%)\n\n  &::-ms-tooltip\n    display: none\n","/*\n * The Magnificent Micro Clearfix\n *\n * Useful for clearing floats without structural markup.\n * Prevents margin-collapsing on child elements in most cases.\n *\n * Known issues:\n *\n * 1. For IE 6/7 when applied to an element that contains only left-floated\n *    children the bottom margin on child elements will be collapsed.\n *\n * 2. For Firefox versions prior to 3.5 when applied to the first child element\n *    of body, and the element does not have non-zero padding, extra space will\n *    appear between the body and the first child.\n *\n * See http://nicolasgallagher.com/micro-clearfix-hack/\n * and http://j.mp/bestclearfix\n *\n */\n\nclearfix()\n  &:before\n  &:after\n    content: \"\"\n    display: table\n  &:after\n    clear: both\n  zoom: 1 if support-for-ie\n","// ---------\n// Utilities\n// ---------\n\n// Mixin: Pie\n// When turned on, enables css3 pie (http://css3pie.com/) for all\n// elements that can use it. Which makes IE look a lot nicer.\n\npie()\n  behavior: url(pie-path) if pie-enabled\n\n// Mixin: Rounded\n//\n// Unless you are working with a ridiculously large element, this will round the\n// corners as much as css will allow. Even in IE.\n//\n// ex. rounded()\n\nrounded()\n  border-radius: 999px\n  pie()\n\n// Alias: No Select\n// You can't highlight this.\n\nno-select()\n  -webkit-touch-callout: none\n  user-select: none\n\n// Alias: B\n// Border, but quicker and with an intelligent default.\n\nb()\n  arguments = unquote('1px solid') unless arguments\n  border: arguments\n\n// Mixin: Triangle\n//\n// One of my favorites. Makes a little css triangle for you. Pass it a direction\n// (up, down, left, right), size (in pixels), and a color.\n//\n// ex. triangle()\n// ex. triangle: 'down' 15px blue\n\ntriangle(direction='up', size=10px, color=#000)\n  width: 0\n  height: 0\n  if direction == 'up'\n    border-left: size solid transparent\n    border-right: size solid transparent\n    border-bottom: size solid color\n  else if direction == 'down'\n    border-left: size solid transparent\n    border-right: size solid transparent\n    border-top: size solid color\n  else if direction == 'left'\n    border-top: size solid transparent\n    border-bottom: size solid transparent\n    border-right: size solid color\n  else if direction == 'right'\n    border-top: size solid transparent\n    border-bottom: size solid transparent\n    border-left: size solid color\n\n// Mixin: Debug\n//\n// Debugging tool - adds a border to the current element, its children,\n// grandchildren, etc so you can see what's up – great for precise layout\n// tweaks.  It will also add flags if you made mistakes like put in inline\n// styles, forgot an alt on an image, left the alt blank, etc. Not to be used\n// in production, obviously.\n//\n// via dbox: http://codepen.io/dbox/pen/GJZzYo?editors=110\n\ndebug()\n  border 1px solid MediumPurple\n  > *\n    border 1px solid DarkKhaki\n  > * > *\n    border 1px solid MediumTurquoise\n  > * > * > *\n    border 1px solid LightSlateGray\n  > * > * > * > *\n    border 1px solid LightBlue\n  > * > * > * > * > *\n    border 1px solid MediumSlateBlue\n  > * > * > * > * > * > *\n    border 1px solid DeepSkyBlue\n  > * > * > * > * > * > * > *\n    border 1px solid DarkSeaGreen\n\n  img\n    border: 1px solid #f00\n    -webkit-filter: hue-rotate(330deg) contrast(.75) saturate(6)\n    filter: hue-rotate(330deg) contrast(.75) saturate(6)\n\n  img[alt]\n    border: 1px solid LimeGreen\n    -webkit-filter: none\n    filter: none\n\n  img[alt=\"\"]\n    border: 1px solid gold\n    -webkit-filter: contrast(1) saturate(2)\n    filter: contrast(1) saturate(2)\n\n  a\n    background: rgba(#f00, .1)\n    border: 1px solid #f00\n\n  a[title]\n    background: none\n    border-color: LimeGreen\n\n  style\n    border: block\n\n  [style], style, [class=\"\"], [id=\"\"], a[href=\"#\"]\n    background: rgba(yellow, .2)\n    border: 1px solid gold\n\n// Custom animation timing functions, ported from bourbon\n// https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_timing-functions.scss\n\n// ease-in\nease-in-quad =      cubic-bezier(0.550,  0.085, 0.680, 0.530)\nease-in-cubic =     cubic-bezier(0.550,  0.055, 0.675, 0.190)\nease-in-quart =     cubic-bezier(0.895,  0.030, 0.685, 0.220)\nease-in-quint =     cubic-bezier(0.755,  0.050, 0.855, 0.060)\nease-in-sine =      cubic-bezier(0.470,  0.000, 0.745, 0.715)\nease-in-expo =      cubic-bezier(0.950,  0.050, 0.795, 0.035)\nease-in-circ =      cubic-bezier(0.600,  0.040, 0.980, 0.335)\nease-in-back =      cubic-bezier(0.600, -0.280, 0.735, 0.045)\nease-in-swift =     cubic-bezier(0.900,  0.000, 0.450, 1.000)\n\n// ease-out\nease-out-quad =     cubic-bezier(0.250,  0.460, 0.450, 0.940)\nease-out-cubic =    cubic-bezier(0.215,  0.610, 0.355, 1.000)\nease-out-quart =    cubic-bezier(0.165,  0.840, 0.440, 1.000)\nease-out-quint =    cubic-bezier(0.230,  1.000, 0.320, 1.000)\nease-out-sine =     cubic-bezier(0.390,  0.575, 0.565, 1.000)\nease-out-expo =     cubic-bezier(0.190,  1.000, 0.220, 1.000)\nease-out-circ =     cubic-bezier(0.075,  0.820, 0.165, 1.000)\nease-out-back =     cubic-bezier(0.175,  0.885, 0.320, 1.275)\nease-out-swift =    cubic-bezier(0.550,  0.000, 0.100, 1.000)\n\n// ease-in-out\nease-in-out-quad =  cubic-bezier(0.455,  0.030, 0.515, 0.955)\nease-in-out-cubic = cubic-bezier(0.645,  0.045, 0.355, 1.000)\nease-in-out-quart = cubic-bezier(0.770,  0.000, 0.175, 1.000)\nease-in-out-quint = cubic-bezier(0.860,  0.000, 0.070, 1.000)\nease-in-out-sine =  cubic-bezier(0.445,  0.050, 0.550, 0.950)\nease-in-out-expo =  cubic-bezier(1.000,  0.000, 0.000, 1.000)\nease-in-out-circ =  cubic-bezier(0.785,  0.135, 0.150, 0.860)\nease-in-out-back =  cubic-bezier(0.680, -0.550, 0.265, 1.550)\nease-in-out-swift = cubic-bezier(0.900,  0.000, 0.100, 1.000)\n\n// Function: Rem Calculator\n//\n// Calculates and returns the rem value based on px input. Default base font\n// size is 16px, but can be changed with base-font-size.\n//\n// ex       : rem(30px) or rem(30)\n// returns  : 1.875rem\n\n-rem(value)\n  base-font-size ?= 16px\n  type = unit(value)\n  if type == px\n    return unit(value / base-font-size, 'rem')\n  else\n    return unit(value, type)\n\n// Block Mixin: Quantity Queries\n//\n// Set rules for a selector based on a specific sibling count.\n// via: https://github.com/pascalduez/postcss-quantity-queries\n//\n// ex. +quantity-at-least(6)\n// ex. +quantity-at-most(12, div)\n// ex. +quantity-between(0, 8, span)\n// ex. +quantity-exactly(5)\n\nquantity-at-least(count=4, selector=li)\n  & > {selector}:nth-last-child(n+{count})\n  & > {selector}:nth-last-child(n+{count}) ~ {selector}\n    {block}\n\nquantity-at-most(count=4, selector=li)\n  & > {selector}:nth-last-child(-n+{count}):first-child\n  & > {selector}:nth-last-child(-n+{count}):first-child ~ {selector}\n    {block}\n\nquantity-between(start=0, end=10, selector=li)\n  & > {selector}:nth-last-child(n+{start}):nth-last-child(-n+{end}):first-child\n  & > {selector}:nth-last-child(n+{start}):nth-last-child(-n+{end}):first-child ~ {selector}\n    {block}\n\nquantity-exactly(count=4, selector=li)\n  & > {selector}:nth-last-child({count}):first-child\n  & > {selector}:nth-last-child({count}):first-child ~ {selector}\n    {block}\n","// helper\n\n-pos(type, args)\n  i = 0\n  position: unquote(type)\n  for j in (1..4)\n    if length(args) > i\n      {args[i]}: args[i + 1] is a 'unit' ? args[i += 1] : 0\n    i += 1\n\n/*\n * Position utility.\n *\n * Synopsis:\n *\n *   fixed: <pos> [n] <pos> [n]\n *\n * Examples:\n *\n *     fixed: top left\n *     fixed: top 5px left\n *     fixed: top left 5px\n *     fixed: top 5px left 5px\n *\n */\n\nfixed()\n  -pos('fixed', arguments)\n\n/*\n * Position utility.\n *\n * Synopsis:\n *\n *   absolute: <pos> [n] <pos> [n]\n *\n * Examples:\n *\n *     absolute: top left\n *     absolute: top 5px left\n *     absolute: top left 5px\n *     absolute: top 5px left 5px\n *\n */\n\nabsolute()\n  -pos('absolute', arguments)\n\n/*\n * Position utility.\n *\n * Synopsis:\n *\n *   relative: <pos> [n] <pos> [n]\n *\n * Examples:\n *\n *     relative: top left\n *     relative: top 5px left\n *     relative: top left 5px\n *     relative: top 5px left 5px\n *\n */\n\nrelative()\n  -pos('relative', arguments)\n","// ----\n// Code\n// ----\n\n// Mixin: Code\n// \n// Styles inline code snippets on your page. Defaults to a beautiful red, but\n// can be passed any color.\n// \n// ex. code: blue\n// ex. code: #7ED45F\n\ncode(color = #DF5C33)\n  padding: 3px 4px\n  color: color\n  background-color: #F5F5F5\n  border: 1px solid #E1E1E8\n  border-radius: 3px\n  font-family: Menlo, Monaco, monospace\n\n// Mixin: Pre\n// \n// Styles code blocks on your page. Syntax highlighting to be included in the\n// future. Takes no arguments.\n// \n// ex. pre()\n\npre()\n  display: block\n  padding: 7px\n  background-color: #F5F5F5\n  border: 1px solid #E1E1E8\n  border-radius: 3px\n  white-space: pre-wrap\n  word-break: break-all\n  font-family: Menlo, Monaco, monospace\n  line-height: 160%\n\n// Additive Mixin: Code Blocks\n// \n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n// \n// Adds roots styles by default to <code> and <pre> tags.\n\ncode-blocks()\n  code\n    code()\n  pre\n    pre()\n","// Alias: group\n// Clearfix with a better name. Excellent for wrangling floats.\n\ngroup = clearfix\n\n// Mixin: Columns\n//\n// For css3 columns. Takes column count (int), column gap (px, em), column width\n// (px, em), and a border-like declaration if you want a column rule. This\n// follows exactly with the css3 spec, it's just quicker.\n//\n// ex. columns()\n// ex. columns: 5\n// ex. columns(8, 15px, 200px, '1px solid red')\n\ncolumns(count=3, gap=30px, width=null, rule=null)\n  column-count: count\n  column-gap: gap\n  column-width: width if width\n  column-rule: unquote(rule) if rule\n\n// Mixin: Avoid Column Break\n//\n// If you have a list that is broken into columns, this will make sure that the\n// list item is not split across columns awkwardly. Works only in webkit at the\n// moment.\n//\n// ex. avoid-column-break()\n\navoid-column-break()\n  column-break-inside: avoid\n\n// Alias: Inline Block\n// Cross browser inline block display. Saves many IE headaches.\n\ninline-block()\n  display: inline-block\n\n  if support-for-ie\n    display: -moz-inline-stack\n    vertical-align: baseline\n    zoom: 1\n    *display: inline\n    *vertical-align: auto\n\n// Mixin: Vertically Align\n// Cross browser vertical align. Works down to IE9.\n//\n// ex. vertically-align() or reset it with vertically-align(false)\n\nvertically-align(reset = null)\n  if reset != false\n    position: relative\n    top: 50%\n    transform: translateY(-50%)\n  else\n    position: relative\n    top: 0\n    transform: translateY(0)\n\n// Mixin: Media\n//\n// Based on Nicole Sullivan's media class, made famous by Facebook\n// http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-\n// hundreds-of-lines-of-code\n//\n// Put this on a parent and it will split the first two children left and right,\n// like you would with perhaps a comment with an avatar to the left. Pass it a\n// margin between the two. Explained fully here:\n// http://carrotblog.com/css-patterns-evolved/\n//\n// This mixin works right when the element you apply it to has two or three\n// direct children. The first one will float to the left, the second one will be\n// to the right of the first, and third will go farthest right.\n//\n// ex. media()\n// ex. media: 15px\n// ex. media: 15px 10px\n\nmedia(margin=10px)\n\n  left-margin = margin\n  right-margin = margin\n\n  if length(arguments) > 1\n    left-margin = arguments[0]\n    right-margin = arguments[1]\n\n  overflow: hidden\n  zoom: 1\n\n  & > *\n    inline-block()\n    overflow: hidden\n  & > *:first-child\n    float: left\n    margin-right: right-margin\n  & > *:nth-child(3)\n    float: right\n    margin-left: left-margin\n\n// Mixin: Ratio Box\n// Set a specific width/height ratio. Useful on background images and iframes.\n\nratio-box(ratio = 1/1)\n  ratio = remove-unit(ratio)\n  overflow: hidden\n  position: relative\n\n  &:before\n    content: ''\n    display: block\n    height: 0\n    padding-top: (1 / ratio) * 100%\n\n\n// Mixin: Table Layout\n//\n// Sometimes you just need a good old-fashioned table layout.\n// Read more: http://colintoh.com/blog/display-table-anti-hero\n//\n// ex: tl()\n// ex: tl(auto)\n\ntl(layoutType = fixed)\n  display: table\n  table-layout: layoutType  // \"fixed\" or \"auto\"\n  margin: 0\n  padding: 0\n  width: 100%\n\n  > *\n    display: table-cell\n","// ------\n// Tables\n// ------\n\n// Mixin: Table\n// \n// Ported directly from Twitter Bootstrap, as they did an excellent job with\n// the tables. Take three fairly self-explanitory arguments, all boolean. 1st\n// makes the table bordered, 2nd adds zebra striping, and the 3rd indiated\n// whether the table is condensed or not.\n// \n// ex. table()\n// ex. table(striped: true)\n\ntable(border = true, striped = true, condensed = false)\n\n  max-width: 100%\n  border-collapse: collapse\n  border-spacing: 0\n  width: 100%\n  margin-bottom: 18px\n\n  th, td\n    padding: 8px\n    line-height: 18px\n    text-align: left\n    vertical-align: top\n    border-top: 1px solid #ddd\n\n  th\n    font-weight: bold\n\n  thead th\n    vertical-align: bottom\n\n  thead:first-child tr th\n  thead:first-child tr td\n    border-top: 0\n\n  tbody + tbody\n    border-top: 2px solid #ddd\n\n  if condensed\n    th, td\n      padding: 4px 5px\n\n  if border\n    border: 1px solid #ddd\n    border-collapse: separate\n    *border-collapse: collapsed\n    border-radius: 4px\n    \n    th + th, td + td, th + td, td + th\n      border-left: 1px solid #ddd\n\n    thead:first-child tr:first-child th\n    tbody:first-child tr:first-child th\n    tbody:first-child tr:first-child td\n      border-top: 0\n\n    thead:first-child tr:first-child th:first-child\n    tbody:first-child tr:first-child td:first-child\n      border-radius: 4px 0 0 0\n\n    thead:first-child tr:first-child th:last-child\n    tbody:first-child tr:first-child td:last-child\n      border-radius: 0 4px 0 0\n\n    thead:last-child tr:last-child th:first-child\n    tbody:last-child tr:last-child td:first-child\n      border-radius: 0 0 0 4px\n\n    thead:last-child tr:last-child th:last-child\n    tbody:last-child tr:last-child td:last-child\n      border-radius: 0 0 4px 0\n\n  if striped\n    tbody tr:nth-child(odd) td\n    tbody tr:nth-child(odd) th\n      background-color: #f9f9f9\n\n    tbody tr:hover td\n    tbody tr:hover th\n      background-color: #f5f5f5\n\n// Additive Mixin: Tables\n// \n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n// \n// Makes tables look awesome by default. Highly recommended if you have tables\n// on your site at all.\n\ntables()\n  table\n    table()\n","// -----\n// Forms\n// -----\n\n// Function: Focus Glow\n// Makes your inputs glow when focused. Pass a color, they will glow that color. \n\n-focus-glow(color = default-color)\n  &:focus\n    box-shadow(0 0 5px rgba(color,.7))\n    border: 1px solid desaturate(color, 35%)\n    outline: none\n\n// Mixin: Input\n// \n// A general purpose mixin for text inputs. Provides an nice attractive default\n// style that's easily customizable. Takes a color as the first param and an\n// optional width as the second.\n// \n// ex. input()\n// ex. input: purple\n// ex. input: #D45D86 400px\n\ninput(color = aqua, width = 250px)\n  box-shadow(inset 0 1px 1px rgba(#000, 0.1))\n  -webkit-font-smoothing: antialiased\n  font-size: unit(font-size, 'px')\n  font-family: font-stack\n  border: solid 1px #bbb\n  border-radius: .2em\n  outline: none\n  padding: .45em\n  background: #fff\n  color: #555\n  width: width\n  text-shadow: 0 0 1px rgba(#fff, .1)\n  transition()\n  pie()\n  if color\n    -focus-glow(color)\n  else\n    box-shadow: none\n\n// Mixin: Input Search\n// \n// A search style input with rounded corners and an optional search icon at the\n// end. Takes any color.\n// \n// ex. input-search()\n// ex. input-search: yellow\n\ninput-search(color = aqua, width = 250px)\n  input: color width\n  padding-left: 9px\n  rounded()\n\n// Mixin: Input Disabled\n// \n// Makes your input appear to be disabled. Note that you also need to add\n// 'disabled' to your html tag in order for it to actually be disabled.\n// \n// ex. input-disabled()\n\ninput-disabled()\n  cursor: not-allowed\n  background: #F5F5F5\n\n  &:hover, &:focus\n    border-color: #bbb\n    box-shadow: inset 0 1px 1px rgba(#000, 0.1)\n\n// Mixin: Label\n// \n// Very basic label for your form. Pass it an optional display type to have it\n// inline or block.\n// \n// ex. label()\n// ex. label: 'block'\n\nlabel(display = 'inline-block')\n  line-height: 1.5em\n  display: unquote(display)\n\n// Mixin: Field\n// \n// Often times it's easier to wrap your input and label in a div called \"field\"\n// so they can be floated, position, and manipulated without screwing up the\n// rest of the form. That's what this mixin is for - put it on a div that\n// contains a label and an input. Then feed it a direction to align (default is\n// right), and an optional width.\n// \n// ex. field()\n// ex. field: left\n// ex. field: right 500px\n\nfield(direction = right, width = 370px)\n  clear: both\n  margin-bottom: 5px\n  text-align: direction\n  width: width\n\n// Mixin: Input Error\n// \n// When someone F'd it up, you gotta show them how it is. Put this on an input\n// to make it clear that something bad is happening. Best implemented in an\n// .error class or something similar.\n// \n// ex. input-error()\n// ex. input-error: blue\n\ninput-error(color = red)\n  color: color\n  border-color: color\n  -focus-glow(color)\n\n// Mixin: Field Error\n// \n// If you are wrapping labels and inputs in a field div, this makes life even\n// easier. Makes the label text as well as the input field red.\n// \n// ex. field-error()\n// ex. field-error: blue\n\nfield-error(color = red)\n  color: color\n  \n  input\n    input-error: color\n\n// Mixin: Input Warning\n// \n// Ok, so maybe you didn't totally F it up, but at very least you deserve a\n// warning. Best implemented in a .warning class or something similar.\n// \n// ex. input-warning()\n// ex. input-warning: blue\n\ninput-warning(color = yellow)\n  color: darken(color, 15%)\n  border-color: color\n  -focus-glow(color)\n\n// Mixin: Field Warning\n// \n// If you are wrapping labels and inputs in a field div, this makes life even\n// easier. Makes the label text as well as the input field yellow.\n// \n// ex. field-warning()\n// ex. field-warning: blue\n\nfield-warning(color = yellow)\n  color: darken(color, 15%)\n  \n  input\n    input-warning: color\n\n// Mixin: Input Success\n// \n// http://cl.ly/F4Em/great-success.jpeg - Best implemented in a .success class\n// or something similar.\n// \n// ex. input-success()\n// ex. input-success: red\n\ninput-success(color = green)\n  color: color\n  border-color: color\n  -focus-glow(color)\n\n// Mixin: Field Success\n// \n// You're probably getting tired of this routine at this point. I'm sure you can\n// imagine what this does.\n// \n// ex. field-success()\n// ex. field-success: blue\n\nfield-success(color = green)\n  color: color\n  input\n    input-success: color\n\n// Additive Mixin: Fields\n// \n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n// \n// Add the field styles to .field as well as success, warning, and failure\n// states. Also takes direction and width. Highly recommended mixin.\n\nfields(direction = right, width = 370px)\n  .field\n    field(direction, width)\n\n    &.success\n      field-success()\n    &.warning\n      field-warning()\n    &.error\n      field-error()\n\n// Additive Mixin: Forms\n// \n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n// \n// Adds nicer looking styles to all text inputs and textareas. Overrides the\n// defaults.\n\nforms()\n  +html5-inputs()\n    input()\n\n    &.disabled\n      input-disabled()\n    &.success\n      input-success()\n    &.warning\n      input-warning()\n    &.error\n      input-error()\n\n// Block Mixin: Html 5 Inputs\n// \n// A block that selects all the html5 input types and lets you style them as \n// you wish without having to type out the whole list.\n// \n// ex. +html5-inputs()\n//       border: red\n\nhtml5-inputs()\n  input[type='email']\n  input[type='number']\n  input[type='password']\n  input[type='search']\n  input[type='tel']\n  input[type='text']\n  input[type='url']\n  input[type='color']\n  input[type='date']\n  input[type='datetime']\n  input[type='datetime-local']\n  input[type='month']\n  input[type='time']\n  input[type='week']\n  textarea\n    {block}\n"],"sourceRoot":"/source/"}